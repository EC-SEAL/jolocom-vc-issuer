{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl, setServerSessionId, completeDIDAuth, makeSealSession, makeSealSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri, setEdugainUriPort } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nvar IssueIsErasmusAegean = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueIsErasmusAegean, _React$Component);\n\n  var _super = _createSuper(IssueIsErasmusAegean);\n\n  function IssueIsErasmusAegean(props) {\n    var _this;\n\n    _classCallCheck(this, IssueIsErasmusAegean);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.proceedWithEidasAuth = _this.proceedWithEidasAuth.bind(_assertThisInitialized(_this));\n    _this.proceedWithEdugainAuth = _this.proceedWithEdugainAuth.bind(_assertThisInitialized(_this));\n    _this.proceedWithLocalLDAP = _this.proceedWithLocalLDAP.bind(_assertThisInitialized(_this));\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && (props.sessionData.eidas !== undefined || props.sessionData.edugain !== undefined);\n    return _this;\n  }\n\n  _createClass(IssueIsErasmusAegean, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.sessionData && this.props.sessionData.eidas) {\n        var toSelect = [this.props.sessionData.eidas];\n        this.props.setEidasToSelection(toSelect);\n      }\n\n      if (this.props.sessionData && this.props.sessionData.edugain) {\n        var _toSelect = [this.props.sessionData.edugain];\n        this.props.setEdugainToSelection(_toSelect);\n      }\n\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        // console.log(`${new Date()} DID not found`);\n        if (!this.props.sealSession) {\n          // console.log(\"startSealSessionAndDidAuth\")\n          console.log(\"isMobile \".concat(isMobile()));\n          this.props.startSealSessionAndDidAuth(this.props.baseUrl, \"eidas\", isMobile()); //and then makeConnectionRequest\n        } else {\n          // console.log(\"makeConnectionRequest\")\n          console.log(\"isMobile \".concat(isMobile()));\n          this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"eidas\", isMobile());\n        }\n      } // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n      // console.log(updateUrl)\n\n\n      var updateUrl = this.props.baseUrl !== \"\" ? \"\".concat(this.props.baseUrl, \"seal/update-session\") : \"/seal/update-session\"; // console.log(\"!!!!!!!!!!!!!!!!1\");\n      // console.log(updateUrl);\n\n      axios.post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri\n      }).then(function (data) {\n        console.log(data);\n        console.log(\"isErasmusAegean.js:: session updated with \".concat(_this2.props.eidasRedirectUri));\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n      // axios\n      //   .post(updateUrl, {\n      //     sessionId: this.props.sealSession,\n      //     variableName: \"ClientCallbackAddr\",\n      //     variableValue: this.props.eidasRedirectUri,\n      //   })\n      //   .then((data) => {\n      //     console.log(data)\n      //     console.log(`isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`);\n      //   });\n    }\n  }, {\n    key: \"proceedWithEidasAuth\",\n    value: function proceedWithEidasAuth() {\n      var _this3 = this;\n\n      var updateUrl = this.props.baseUrl !== \"\" ? \"\".concat(this.props.baseUrl, \"seal/update-session\") : \"/seal/update-session\";\n      axios.post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri\n      }).then(function (data) {\n        console.log(data);\n        console.log(\"isErasmusAegean.js:: session updated with \".concat(_this3.props.eidasRedirectUri));\n        axios.get(\"\".concat(_this3.props.baseUrl, \"/vc/make-eidas-token?sessionId=\").concat(_this3.props.sealSession)).then(function (data) {\n          console.log(\"the data is::\");\n          console.log(data);\n          window.location.href = \"https://\".concat(_this3.props.eidasUri, \":\").concat(_this3.props.eidasPort, \"/eidas-idp/is/query?msToken=\").concat(data.data.additionalData);\n          return null;\n        });\n      });\n    }\n  }, {\n    key: \"proceedWithEdugainAuth\",\n    value: function () {\n      var _proceedWithEdugainAuth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this4 = this;\n\n        var makeEdugainCallbackToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-edugain-callback-token?sessionId=\").concat(this.props.sealSession));\n\n              case 2:\n                makeEdugainCallbackToken = _context.sent;\n                _context.next = 5;\n                return axios.post(\"\".concat(this.props.baseUrl, \"seal/update-session\"), {\n                  sessionId: this.props.sealSession,\n                  variableName: \"ClientCallbackAddr\",\n                  variableValue: \"\".concat(this.props.eidasRedirectUri, \"?msToken=\").concat(makeEdugainCallbackToken.data.additionalData)\n                });\n\n              case 5:\n                _context.next = 7;\n                return axios.post(\"\".concat(this.props.baseUrl, \"seal/update-session\"), {\n                  sessionId: this.props.sealSession,\n                  variableName: \"dataStore\",\n                  variableValue: JSON.stringify({})\n                });\n\n              case 7:\n                console.log(\"edugain.js:: session updated\");\n                axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-edugain-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n                  // console.log(`the data is::`);\n                  // console.log(data);\n                  var theUrl = _this4.props.edugainUri.indexOf(\"https\" >= 0) ? _this4.props.edugainUri : \"http://\".concat(_this4.props.edugainUri);\n                  window.location.href = \"https://\".concat(_this4.props.edugainUri, \":\").concat(_this4.props.edugainPort, \"/is/query?msToken=\").concat(data.data.additionalData); //`${theUrl}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n\n                  return null;\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function proceedWithEdugainAuth() {\n        return _proceedWithEdugainAuth.apply(this, arguments);\n      }\n\n      return proceedWithEdugainAuth;\n    }()\n  }, {\n    key: \"proceedWithLocalLDAP\",\n    value: function () {\n      var _proceedWithLocalLDAP = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var sessionFrag;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                sessionFrag = this.props.sealSession ? \"?session=\".concat(this.props.sealSession) : \"\";\n                window.location.href = this.props.baseUrl ? \"\".concat(this.props.baseUrl, \"uaegean-seal-usability/authenticate\").concat(sessionFrag) : \"\".concat(this.props.baseUrl, \"/uaegean-seal-usability/authenticate\").concat(sessionFrag);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function proceedWithLocalLDAP() {\n        return _proceedWithLocalLDAP.apply(this, arguments);\n      }\n\n      return proceedWithLocalLDAP;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = this.props.vcSent ? 3 : !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n      var stepperSteps = [{\n        title: \"Pair your wallet\"\n      }, {\n        title: 'Authenticate over \"eIDAS eID, eduGAIN, or email\"'\n      }, {\n        title: \"Request Issuance\"\n      }];\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.serverSessionId,\n          sealSession: this.props.sealSession\n        }));\n      }\n\n      var eIDASLoginButton = !this.hasRequiredAttributes ? __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col text-center\"\n      }, __jsx(Button, {\n        onClick: this.proceedWithEidasAuth,\n        style: {\n          width: \"12rem\",\n          marginBottom: \"0.7rem\"\n        }\n      }, \"eIDAS eID\")), __jsx(\"div\", {\n        className: \"col text-center\"\n      }, __jsx(Button, {\n        onClick: this.proceedWithEdugainAuth,\n        style: {\n          width: \"12rem\",\n          marginBottom: \"0.7rem\"\n        }\n      }, \"eduGAIN\"))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col text-center\"\n      }, __jsx(Button, {\n        onClick: this.proceedWithLocalLDAP,\n        style: {\n          width: \"12rem\",\n          marginBottom: \"0.7rem\"\n        }\n      }, \"Login with your email\")))) : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"Authenticate\");\n\n      var issueVCBut = __jsx(IssueVCButton, {\n        hasRequiredAttributes: this.hasRequiredAttributes,\n        baseUrl: this.props.baseUrl,\n        userSelection: this.props.userSelection,\n        uuid: this.props.sealSession,\n        vcType: \"SEAL-isErasmusAegean\"\n      });\n\n      var eidasCard = this.props.errorUser ? __jsx(\"div\", null, \" \", __jsx(\"p\", null, \"Your are not registerd as a University of the Aegean Erasmus Student\"), \" \", __jsx(\"div\", null, \"Reason: \", this.props.errorUser)) : __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue a myIDs Card, proving your affiliation with UAegean\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to one of the following data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through one of the required data sources (i.e. eIDAS eID or eduGAIN or via e-mail), click the \\\"Issue\\\" button to generate and receive your identity card.\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, issueVCBut)))));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        card: eidasCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession,\n        credQROffer: this.props.credQROffer\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sealSession, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  reduxStore.dispatch(setServerSessionId(req.session.id));\n                  DIDOk = req.session.DID;\n                  sealSession = req.session.sealSession;\n                  console.log(\"eidas.js:: in the server the seal session is:: \".concat(req.session.sealSession));\n                  reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n                  reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n                  reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                    DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n                    sealSession = reduxStore.getState().sealSession;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  reduxStore.dispatch(completeDIDAuth(sealSession));\n                }\n\n                if (sealSession) {\n                  reduxStore.dispatch(setSealSession(sealSession));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context3.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  errorUser: req.session.error,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueIsErasmusAegean;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEidasToSelection: function setEidasToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: function setEdugainToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, vcType, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: function startSealSessionAndDidAuth(baseUrl, vcType, isMobile) {\n      dispatch(makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: function setEidas(uri, data) {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: function setEidasRedirect(uri) {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: function setEdugain(uri, data) {\n      dispatch(setEdugainUriPort(uri, data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueIsErasmusAegean);","map":{"version":3,"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/issue/isErasmusAegean.js"],"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","setServerSessionId","completeDIDAuth","makeSealSession","makeSealSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","setEdugainUriPort","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","IssueIsErasmusAegean","props","dispatch","isFetching","sessionData","proceedWithEidasAuth","bind","proceedWithEdugainAuth","proceedWithLocalLDAP","hasRequiredAttributes","undefined","eidas","edugain","toSelect","setEidasToSelection","setEdugainToSelection","DID","sealSession","console","log","startSealSessionAndDidAuth","baseUrl","makeConnectionRequest","updateUrl","post","sessionId","variableName","variableValue","eidasRedirectUri","then","data","get","window","location","href","eidasUri","eidasPort","additionalData","makeEdugainCallbackToken","JSON","stringify","theUrl","edugainUri","indexOf","edugainPort","sessionFrag","stepNumber","vcSent","stepperSteps","title","qrData","uuid","serverSessionId","eIDASLoginButton","width","marginBottom","issueVCBut","userSelection","eidasCard","errorUser","marginTop","result","credQROffer","reduxStore","req","userSessionData","session","userData","enpoint","id","DIDOk","getState","error","Component","mapStateToProps","state","fetching","endpoint","edugainRedirectUri","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","vcType","didAuthOK","startSealSession","setTheSealSession","setEidas","uri","setEidasRedirect","setEdugain"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSealSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n  setEdugainUriPort,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueIsErasmusAegean extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this);\n    this.proceedWithEdugainAuth = this.proceedWithEdugainAuth.bind(this);\n    this.proceedWithLocalLDAP = this.proceedWithLocalLDAP.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      (props.sessionData.eidas !== undefined ||\n        props.sessionData.edugain !== undefined);\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n\n      console.log(\n        `eidas.js:: in the server the seal session is:: ${req.session.sealSession}`\n      );\n      reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n      reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n      reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n    if (sealSession) {\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      errorUser: req.session.error,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      let toSelect = [this.props.sessionData.eidas];\n      this.props.setEidasToSelection(toSelect);\n    }\n    if (this.props.sessionData && this.props.sessionData.edugain) {\n      let toSelect = [this.props.sessionData.edugain];\n      this.props.setEdugainToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      // console.log(`${new Date()} DID not found`);\n      if (!this.props.sealSession) {\n        // console.log(\"startSealSessionAndDidAuth\")\n        console.log(`isMobile ${isMobile()}`);\n\n        this.props.startSealSessionAndDidAuth(\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        ); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        );\n      }\n    }\n    // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n    // console.log(updateUrl)\n    let updateUrl =\n      this.props.baseUrl !== \"\"\n        ? `${this.props.baseUrl}seal/update-session`\n        : `/seal/update-session`;\n    // console.log(\"!!!!!!!!!!!!!!!!1\");\n    // console.log(updateUrl);\n    axios\n      .post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri,\n      })\n      .then((data) => {\n        console.log(data);\n        console.log(\n          `isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`\n        );      \n      });\n  }\n\n  componentDidUpdate() {\n    // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n    // axios\n    //   .post(updateUrl, {\n    //     sessionId: this.props.sealSession,\n    //     variableName: \"ClientCallbackAddr\",\n    //     variableValue: this.props.eidasRedirectUri,\n    //   })\n    //   .then((data) => {\n    //     console.log(data)\n    //     console.log(`isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`);\n    //   });\n  }\n\n  proceedWithEidasAuth() {\n    let updateUrl =\n    this.props.baseUrl !== \"\"\n      ? `${this.props.baseUrl}seal/update-session`\n      : `/seal/update-session`;\n  axios\n    .post(updateUrl, {\n      sessionId: this.props.sealSession,\n      variableName: \"ClientCallbackAddr\",\n      variableValue: this.props.eidasRedirectUri,\n    })\n    .then((data) => {\n      console.log(data);\n      console.log(\n        `isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`\n      );\n\n  axios\n      .get(\n        `${this.props.baseUrl}/vc/make-eidas-token?sessionId=${this.props.sealSession}`\n      )\n      .then((data) => {\n        console.log(`the data is::`);\n        console.log(data);\n        window.location.href = `https://${this.props.eidasUri}:${this.props.eidasPort}/eidas-idp/is/query?msToken=${data.data.additionalData}`;\n        return null;\n      });  });\n    }\n    async proceedWithEdugainAuth() {\n      // register the callbackUri to the SessionManager\n      let makeEdugainCallbackToken = await axios.get(\n        `${this.props.baseUrl}/vc/make-edugain-callback-token?sessionId=${this.props.sealSession}`\n      );\n      await axios.post(`${this.props.baseUrl}seal/update-session`, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: `${this.props.eidasRedirectUri}?msToken=${makeEdugainCallbackToken.data.additionalData}`,\n      });\n      await axios.post(`${this.props.baseUrl}seal/update-session`, {\n        sessionId: this.props.sealSession,\n        variableName: \"dataStore\",\n        variableValue: JSON.stringify({}),\n      });\n      console.log(\"edugain.js:: session updated\");\n  \n      axios\n        .get(\n          `${this.props.baseUrl}/vc/make-edugain-token?sessionId=${this.props.sealSession}`\n        )\n        .then((data) => {\n          // console.log(`the data is::`);\n          // console.log(data);\n          let theUrl = this.props.edugainUri.indexOf(\"https\" >= 0)\n            ? this.props.edugainUri\n            : `http://${this.props.edugainUri}`;\n          window.location.href = `https://${this.props.edugainUri}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n          //`${theUrl}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n          return null;\n        });\n    }\n\n    async proceedWithLocalLDAP() {\n      let sessionFrag = this.props.sealSession\n        ? `?session=${this.props.sealSession}`\n        : \"\";\n      window.location.href = this.props.baseUrl\n        ? `${this.props.baseUrl}uaegean-seal-usability/authenticate${sessionFrag}`\n        : `${this.props.baseUrl}/uaegean-seal-usability/authenticate${sessionFrag}`;\n    }\n\n  render() {\n    let stepNumber =  this.props.vcSent?3:!this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n      { title: 'Authenticate over \"eIDAS eID, eduGAIN, or email\"' },\n      { title: \"Request Issuance\" },\n    ];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }\n\n    let eIDASLoginButton = !this.hasRequiredAttributes ? (\n      <div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEidasAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eIDAS eID\n            </Button>\n          </div>\n\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEdugainAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eduGAIN\n            </Button>\n          </div>\n\n\n        </div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithLocalLDAP}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              Login with your email\n            </Button>\n          </div>\n        </div>\n      </div>\n    ) : (\n        <Button variant=\"primary\" disabled>\n          Authenticate\n        </Button>\n      );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"SEAL-isErasmusAegean\"}\n      />\n    );\n\n    let eidasCard = this.props.errorUser ? (\n      <div>\n        {\" \"}\n        <p>\n          Your are not registerd as a University of the Aegean Erasmus Student\n        </p>{\" \"}\n        <div>Reason: {this.props.errorUser}</div>\n      </div>\n    ) : (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Issue a myIDs Card, proving your affiliation with UAegean\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to one of the following data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through one of the required data sources\n            (i.e. eIDAS eID or eduGAIN or via e-mail), click the \"Issue\" button to generate\n            and receive your identity card.\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{eIDASLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.serverSessionId}\n        card={eidasCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        credQROffer={this.props.credQROffer}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEidasToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile)\n      );\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: (uri, data) => {\n      dispatch(setEdugainUriPort(uri, data));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueIsErasmusAegean);\n"]},"metadata":{},"sourceType":"module"}