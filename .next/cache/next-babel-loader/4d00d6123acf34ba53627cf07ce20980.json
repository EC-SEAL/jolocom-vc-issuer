{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl, setServerSessionId, completeDIDAuth, makeSealSession, makeSealSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri, setEdugainUriPort, setEdugainRedirectUri } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueLinkedVCButton from \"../../../components/IssueLinkedVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nvar IssueIsErasmusAegean = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueIsErasmusAegean, _React$Component);\n\n  var _super = _createSuper(IssueIsErasmusAegean);\n\n  function IssueIsErasmusAegean(props) {\n    var _this;\n\n    _classCallCheck(this, IssueIsErasmusAegean);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.proceedWithEidasAuth = _this.proceedWithEidasAuth.bind(_assertThisInitialized(_this));\n    _this.proceedWithEdugainAuth = _this.proceedWithEdugainAuth.bind(_assertThisInitialized(_this));\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.eidas !== undefined && props.sessionData.edugain !== undefined;\n    _this.hasEidas = props.sessionData !== null && props.sessionData.eidas !== undefined;\n    _this.hasEdugain = props.sessionData !== null && props.sessionData.eidas !== undefined;\n    return _this;\n  }\n\n  _createClass(IssueIsErasmusAegean, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.sessionData && this.props.sessionData.eidas) {\n        var toSelect = [this.props.sessionData.eidas];\n\n        if (this.props.sessionData.edugain) {\n          toSelect.push(this.props.sessionData.edugain);\n        }\n\n        this.props.setEidasToSelection(toSelect);\n      }\n\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        // console.log(`${new Date()} DID not found`);\n        if (!this.props.sealSession) {\n          this.props.startSealSessionAndDidAuth(this.props.baseUrl, \"eidas\", isMobile()); //and then makeConnectionRequest\n        } else {\n          // console.log(\"makeConnectionRequest\")\n          console.log(\"isMobile \".concat(isMobile()));\n          this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"eidas\", isMobile());\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (this.props.DID) {\n        //if DID auth is completed\n        if (this.props.sessionData) {\n          if (this.props.sessionData.eidas) {\n            // register the callbackUri to the SessionManager eduGAIN\n            axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-edugain-callback-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n              axios.post(\"\".concat(_this2.props.baseUrl, \"seal/update-session\"), {\n                sessionId: _this2.props.sealSession,\n                variableName: \"ClientCallbackAddr\",\n                variableValue: \"\".concat(_this2.props.edugainRedirectUri, \"?msToken=\").concat(data.data.additionalData)\n              }).then(function (data) {\n                //the edugain ms expects an empty datastore object to exist in session\n                axios.post(\"\".concat(_this2.props.baseUrl, \"seal/update-session\"), {\n                  sessionId: _this2.props.sealSession,\n                  variableName: \"dataStore\",\n                  variableValue: JSON.stringify({})\n                }).then(function (data) {\n                  console.log(\"edugain.js:: session updated\");\n                });\n              });\n            });\n          }\n        } else {\n          //if no session data exists, that means that no user authentication has taken place, i.e. no eIDAS auth since that is the first\n          axios.post(\"\".concat(this.props.baseUrl, \"seal/update-session\"), {\n            sessionId: this.props.sealSession,\n            variableName: \"ClientCallbackAddr\",\n            variableValue: this.props.eidasRedirectUri\n          }).then(function (data) {\n            console.log(\"eidas.js:: session updated with \".concat(_this2.props.sealSession, \", ClientCallbackAddr and \").concat(_this2.props.eidasRedirectUri));\n          });\n        }\n      }\n    }\n  }, {\n    key: \"proceedWithEidasAuth\",\n    value: function proceedWithEidasAuth() {\n      var _this3 = this;\n\n      //make msToken\n      console.log(\"proceed  with \");\n      axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-eidas-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n        window.location.href = \"https://\".concat(_this3.props.eidasUri, \":\").concat(_this3.props.eidasPort, \"/eidas-idp/is/query?msToken=\").concat(data.data.additionalData);\n        return null;\n      });\n    }\n  }, {\n    key: \"proceedWithEdugainAuth\",\n    value: function proceedWithEdugainAuth() {\n      var _this4 = this;\n\n      axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-edugain-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n        var theUrl = _this4.props.edugainUri.indexOf(\"https\" >= 0) ? _this4.props.edugainUri : \"http://\".concat(_this4.props.edugainUri);\n        window.location.href = \"\".concat(theUrl, \":\").concat(_this4.props.edugainPort, \"/is/query?msToken=\").concat(data.data.additionalData);\n        return null;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = !this.props.DID ? 0 : this.hasEidas ? this.hasEdugain ? 2 : 3 : 1;\n      var stepperSteps = [{\n        title: \"Pair your wallet\"\n      }, {\n        title: 'Authenticate over \"eIDAS-eID\"'\n      }, {\n        title: 'Authenticate over \"eduGAIN\"'\n      }, {\n        title: \"Request Issuance\"\n      }];\n\n      if (this.props.vcFailed) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(\"div\", null, \"VC issuance link failure. Please authenticate as the same person on all data sources!\"));\n      }\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.serverSessionId,\n          sealSession: this.props.sealSession\n        }));\n      }\n\n      var eIDASLoginButton = !this.props.sessionData || !this.props.sessionData.eidas ? __jsx(Button, {\n        onClick: this.proceedWithEidasAuth\n      }, \"eIDAS\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"eIDAS\");\n      var edugainLoginButton = this.props.sessionData && !this.hasRequiredAttributes && this.props.sessionData.eidas ? __jsx(Button, {\n        onClick: this.proceedWithEdugainAuth\n      }, \"eduGAIN\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"eduGAIN\");\n\n      var issueLinkVCBut = __jsx(IssueLinkedVCButton, {\n        hasRequiredAttributes: this.hasRequiredAttributes,\n        baseUrl: this.props.baseUrl,\n        userSelection: this.props.userSelection,\n        uuid: this.props.sealSession,\n        vcType: \"SEAL-EIDAS-EDUGAIN\"\n      });\n\n      var credentialCard = this.props.vcFailed ? __jsx(\"div\", null, \" \", __jsx(\"p\", null, \"Linking Failed. The provided attribute sets do not match!\"), \" \", __jsx(\"p\", null, \"Please, make sure you authenticated with the correct credentials on the data sources and try again. \"), \" \") : __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue a Credential linking your eIDAS-eID with your eduGAIN attributes\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to the required data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through the required data sources, click the \\\"Issue\\\" button to generate and receive your VC .\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, edugainLoginButton), __jsx(Col, null, issueLinkVCBut)))));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        card: credentialCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sealSession, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  reduxStore.dispatch(setServerSessionId(req.session.id));\n                  DIDOk = req.session.DID;\n                  sealSession = req.session.sealSession; // console.log(\n                  //   `eidas-edugain.js:: in the server the seal session is:: ${req.session.sealSession}`\n                  // );\n                  // console.log(`eidas-edugain.js setting eidas: ${req.eidasUri} , ${req.eidasPort}`)\n                  // console.log(`eidas-edugain.js setting eidas: ${req.eidasRedirectUri} `)\n\n                  reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n                  reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n                  reduxStore.dispatch(setEdugainRedirectUri(req.edugainRedirectUri));\n                  reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                    DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n                    sealSession = reduxStore.getState().sealSession;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  reduxStore.dispatch(completeDIDAuth(sealSession));\n                }\n\n                if (sealSession) {\n                  reduxStore.dispatch(setSealSession(sealSession));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueIsErasmusAegean;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    edugainPort: state.edugainPort,\n    edugainUri: state.edugainUri,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    edugainRedirectUri: state.edugainRedirectUri,\n    vcFailed: state.vcFailed\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEidasToSelection: function setEidasToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, vcType, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: function startSealSessionAndDidAuth(baseUrl, vcType, isMobile) {\n      dispatch(makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: function setEidas(uri, data) {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: function setEidasRedirect(uri) {\n      dispatch(setEidasRedirectUri(uri));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueIsErasmusAegean);","map":{"version":3,"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/issue/eidas-edugain.js"],"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","setServerSessionId","completeDIDAuth","makeSealSession","makeSealSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","setEdugainUriPort","setEdugainRedirectUri","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueLinkedVCButton","PairOrCard","ConnectMobile","isMobile","IssueIsErasmusAegean","props","dispatch","isFetching","sessionData","proceedWithEidasAuth","bind","proceedWithEdugainAuth","hasRequiredAttributes","undefined","eidas","edugain","hasEidas","hasEdugain","toSelect","push","setEidasToSelection","DID","sealSession","startSealSessionAndDidAuth","baseUrl","console","log","makeConnectionRequest","get","then","data","post","sessionId","variableName","variableValue","edugainRedirectUri","additionalData","JSON","stringify","eidasRedirectUri","window","location","href","eidasUri","eidasPort","theUrl","edugainUri","indexOf","edugainPort","stepNumber","stepperSteps","title","vcFailed","qrData","uuid","serverSessionId","eIDASLoginButton","edugainLoginButton","issueLinkVCBut","userSelection","credentialCard","marginTop","result","vcSent","reduxStore","req","userSessionData","session","userData","enpoint","id","DIDOk","getState","Component","mapStateToProps","state","fetching","endpoint","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","vcType","didAuthOK","startSealSession","setTheSealSession","setEidas","uri","setEidasRedirect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSealSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n  setEdugainUriPort,\n  setEdugainRedirectUri,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueLinkedVCButton from \"../../../components/IssueLinkedVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueIsErasmusAegean extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this);\n    this.proceedWithEdugainAuth = this.proceedWithEdugainAuth.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.eidas !== undefined &&\n      props.sessionData.edugain !== undefined;\n    this.hasEidas =  props.sessionData !== null && props.sessionData.eidas !== undefined;\n    this.hasEdugain =  props.sessionData !== null && props.sessionData.eidas !== undefined;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n\n      // console.log(\n      //   `eidas-edugain.js:: in the server the seal session is:: ${req.session.sealSession}`\n      // );\n      // console.log(`eidas-edugain.js setting eidas: ${req.eidasUri} , ${req.eidasPort}`)\n      // console.log(`eidas-edugain.js setting eidas: ${req.eidasRedirectUri} `)\n\n      reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n      reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n      reduxStore.dispatch(setEdugainRedirectUri(req.edugainRedirectUri));\n      reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n    if (sealSession) {\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      let toSelect = [this.props.sessionData.eidas];\n      if(this.props.sessionData.edugain){\n        toSelect.push(this.props.sessionData.edugain)\n      }\n\n      this.props.setEidasToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      // console.log(`${new Date()} DID not found`);\n      if (!this.props.sealSession) {\n        this.props.startSealSessionAndDidAuth(\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        ); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        );\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.DID) {\n      //if DID auth is completed\n\n      if (this.props.sessionData) {\n        if (this.props.sessionData.eidas) {\n          // register the callbackUri to the SessionManager eduGAIN\n          axios\n            .get(\n              `${this.props.baseUrl}/vc/make-edugain-callback-token?sessionId=${this.props.sealSession}`\n            )\n            .then((data) => {\n              axios\n                .post(`${this.props.baseUrl}seal/update-session`, {\n                  sessionId: this.props.sealSession,\n                  variableName: \"ClientCallbackAddr\",\n                  variableValue: `${this.props.edugainRedirectUri}?msToken=${data.data.additionalData}`,\n                })\n                .then((data) => {\n                  //the edugain ms expects an empty datastore object to exist in session\n                  axios\n                    .post(`${this.props.baseUrl}seal/update-session`, {\n                      sessionId: this.props.sealSession,\n                      variableName: \"dataStore\",\n                      variableValue: JSON.stringify({}),\n                    })\n                    .then((data) => {\n                      console.log(\"edugain.js:: session updated\");\n                    });\n                });\n            });\n        }\n      } else {\n        //if no session data exists, that means that no user authentication has taken place, i.e. no eIDAS auth since that is the first\n        axios\n          .post(`${this.props.baseUrl}seal/update-session`, {\n            sessionId: this.props.sealSession,\n            variableName: \"ClientCallbackAddr\",\n            variableValue: this.props.eidasRedirectUri,\n          })\n          .then((data) => {\n            console.log(\n              `eidas.js:: session updated with ${this.props.sealSession}, ClientCallbackAddr and ${this.props.eidasRedirectUri}`\n            );\n          });\n      }\n    }\n  }\n\n  proceedWithEidasAuth() {\n    //make msToken\n    console.log(\"proceed  with \");\n    axios\n      .get(\n        `${this.props.baseUrl}/vc/make-eidas-token?sessionId=${this.props.sealSession}`\n      )\n      .then((data) => {\n        window.location.href = `https://${this.props.eidasUri}:${this.props.eidasPort}/eidas-idp/is/query?msToken=${data.data.additionalData}`;\n        return null;\n      });\n  }\n\n  proceedWithEdugainAuth() {\n    axios\n      .get(\n        `${this.props.baseUrl}/vc/make-edugain-token?sessionId=${this.props.sealSession}`\n      )\n      .then((data) => {\n        let theUrl = this.props.edugainUri.indexOf(\"https\" >= 0)\n          ? this.props.edugainUri\n          : `http://${this.props.edugainUri}`;\n        window.location.href = `${theUrl}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n        return null;\n      });\n  }\n\n  render() {\n    let stepNumber = !this.props.DID ? 0 : ( (this.hasEidas ? (this.hasEdugain?2:3) : 1));\n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n      { title: 'Authenticate over \"eIDAS-eID\"' },\n      { title: 'Authenticate over \"eduGAIN\"' },\n      { title: \"Request Issuance\" },\n    ];\n\n    if(this.props.vcFailed){\n      return (<Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n       <div>\n         VC issuance link failure. Please authenticate as the same person on all data sources!\n       </div>\n      </Layout>)\n\n    }\n\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }\n\n    let eIDASLoginButton =\n      !this.props.sessionData || !this.props.sessionData.eidas ? (\n        <Button onClick={this.proceedWithEidasAuth}>eIDAS</Button>\n      ) : (\n        <Button variant=\"primary\" disabled>\n          eIDAS\n        </Button>\n      );\n\n    let edugainLoginButton =\n      this.props.sessionData &&\n      !this.hasRequiredAttributes &&\n      this.props.sessionData.eidas ? (\n        <Button onClick={this.proceedWithEdugainAuth}>eduGAIN</Button>\n      ) : (\n        <Button variant=\"primary\" disabled>\n          eduGAIN\n        </Button>\n      );\n\n    let issueLinkVCBut = (\n      <IssueLinkedVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"SEAL-EIDAS-EDUGAIN\"}\n      />\n    );\n\n    let credentialCard = this.props.vcFailed ? (<div> <p>Linking Failed. The provided attribute sets do not match!</p> <p>Please, make sure you authenticated with the correct credentials on the data sources and try again. </p> </div>) : \n     (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Issue a Credential linking your eIDAS-eID with your eduGAIN attributes\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to the required data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through the required data sources, click\n            the \"Issue\" button to generate and receive your VC .\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{eIDASLoginButton}</Col>\n              <Col>{edugainLoginButton}</Col>\n              <Col>{issueLinkVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.serverSessionId}\n        card={credentialCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    edugainPort: state.edugainPort,\n    edugainUri: state.edugainUri,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    edugainRedirectUri: state.edugainRedirectUri,\n    vcFailed: state.vcFailed,\n    \n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEidasToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile)\n      );\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IssueIsErasmusAegean);\n"]},"metadata":{},"sourceType":"module"}