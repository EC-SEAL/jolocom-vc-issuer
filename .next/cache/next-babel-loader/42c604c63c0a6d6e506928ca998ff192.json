{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl, setServerSessionId, completeDIDAuth, makeSealSession, makeSealSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri, setEdugainUriPort } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nvar IssueIsErasmusAegean = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueIsErasmusAegean, _React$Component);\n\n  var _super = _createSuper(IssueIsErasmusAegean);\n\n  function IssueIsErasmusAegean(props) {\n    var _this;\n\n    _classCallCheck(this, IssueIsErasmusAegean);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.proceedWithEidasAuth = _this.proceedWithEidasAuth.bind(_assertThisInitialized(_this)); // this.proceedWithEdugainAuth = this.proceedWithEdugainAuth.bind(this);\n\n    _this.proceedWithLocalLDAP = _this.proceedWithLocalLDAP.bind(_assertThisInitialized(_this));\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && (props.sessionData.eidas !== undefined || props.sessionData.edugain !== undefined);\n    return _this;\n  }\n\n  _createClass(IssueIsErasmusAegean, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.sessionData && this.props.sessionData.eidas) {\n        var toSelect = [this.props.sessionData.eidas];\n        this.props.setEidasToSelection(toSelect);\n      }\n\n      if (this.props.sessionData && this.props.sessionData.edugain) {\n        var _toSelect = [this.props.sessionData.edugain];\n        this.props.setEdugainToSelection(_toSelect);\n      }\n\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        // console.log(`${new Date()} DID not found`);\n        if (!this.props.sealSession) {\n          // console.log(\"startSealSessionAndDidAuth\")\n          console.log(\"isMobile \".concat(isMobile()));\n          this.props.startSealSessionAndDidAuth(this.props.baseUrl, \"eidas\", isMobile()); //and then makeConnectionRequest\n        } else {\n          // console.log(\"makeConnectionRequest\")\n          console.log(\"isMobile \".concat(isMobile()));\n          this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"eidas\", isMobile());\n        }\n      } // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n      // console.log(updateUrl)\n\n\n      var updateUrl = this.props.baseUrl !== \"\" ? \"\".concat(this.props.baseUrl, \"seal/update-session\") : \"/seal/update-session\"; // console.log(\"!!!!!!!!!!!!!!!!1\");\n      // console.log(updateUrl);\n\n      axios.post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri\n      }).then(function (data) {\n        console.log(data);\n        console.log(\"isErasmusAegean.js:: session updated with \".concat(_this2.props.eidasRedirectUri));\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n      // axios\n      //   .post(updateUrl, {\n      //     sessionId: this.props.sealSession,\n      //     variableName: \"ClientCallbackAddr\",\n      //     variableValue: this.props.eidasRedirectUri,\n      //   })\n      //   .then((data) => {\n      //     console.log(data)\n      //     console.log(`isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`);\n      //   });\n    }\n  }, {\n    key: \"proceedWithEidasAuth\",\n    value: function proceedWithEidasAuth() {\n      var _this3 = this;\n\n      var updateUrl = this.props.baseUrl !== \"\" ? \"\".concat(this.props.baseUrl, \"seal/update-session\") : \"/seal/update-session\";\n      axios.post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri\n      }).then(function (data) {\n        console.log(data);\n        console.log(\"isErasmusAegean.js:: session updated with \".concat(_this3.props.eidasRedirectUri));\n        axios.get(\"\".concat(_this3.props.baseUrl, \"/vc/make-eidas-token?sessionId=\").concat(_this3.props.sealSession)).then(function (data) {\n          console.log(\"the data is::\");\n          console.log(data);\n          window.location.href = \"https://\".concat(_this3.props.eidasUri, \":\").concat(_this3.props.eidasPort, \"/eidas-idp/is/query?msToken=\").concat(data.data.additionalData);\n          return null;\n        });\n      });\n    } // async proceedWithEdugainAuth() {\n    //   // register the callbackUri to the SessionManager\n    //   let makeEdugainCallbackToken = await axios.get(\n    //     `${this.props.baseUrl}/vc/make-edugain-callback-token?sessionId=${this.props.sealSession}`\n    //   );\n    //   await axios.post(`${this.props.baseUrl}seal/update-session`, {\n    //     sessionId: this.props.sealSession,\n    //     variableName: \"ClientCallbackAddr\",\n    //     variableValue: `${this.props.eidasRedirectUri}?msToken=${makeEdugainCallbackToken.data.additionalData}`,\n    //   });\n    //   await axios.post(`${this.props.baseUrl}seal/update-session`, {\n    //     sessionId: this.props.sealSession,\n    //     variableName: \"dataStore\",\n    //     variableValue: JSON.stringify({}),\n    //   });\n    //   console.log(\"edugain.js:: session updated\");\n    //   axios\n    //     .get(\n    //       `${this.props.baseUrl}/vc/make-edugain-token?sessionId=${this.props.sealSession}`\n    //     )\n    //     .then((data) => {\n    //       // console.log(`the data is::`);\n    //       // console.log(data);\n    //       let theUrl = this.props.edugainUri.indexOf(\"https\" >= 0)\n    //         ? this.props.edugainUri\n    //         : `http://${this.props.edugainUri}`;\n    //       window.location.href = `https://${this.props.edugainUri}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n    //       //`${theUrl}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n    //       return null;\n    //     });\n    // }\n\n  }, {\n    key: \"proceedWithLocalLDAP\",\n    value: function () {\n      var _proceedWithLocalLDAP = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var sessionFrag;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sessionFrag = this.props.sealSession ? \"?session=\".concat(this.props.sealSession) : \"\";\n                window.location.href = this.props.baseUrl ? \"\".concat(this.props.baseUrl, \"uaegean-seal-usability/authenticate\").concat(sessionFrag) : \"\".concat(this.props.baseUrl, \"/uaegean-seal-usability/authenticate\").concat(sessionFrag);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function proceedWithLocalLDAP() {\n        return _proceedWithLocalLDAP.apply(this, arguments);\n      }\n\n      return proceedWithLocalLDAP;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = this.props.vcSent ? 3 : !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n      var stepperSteps = [{\n        title: \"Pair your wallet\"\n      }, {\n        title: 'Authenticate over \"eIDAS eID,  or email\"'\n      }, {\n        title: \"Request Issuance\"\n      }];\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.serverSessionId,\n          sealSession: this.props.sealSession\n        }));\n      }\n\n      var eIDASLoginButton = !this.hasRequiredAttributes ? __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col text-center\"\n      }, __jsx(Button, {\n        onClick: this.proceedWithEidasAuth,\n        style: {\n          width: \"12rem\",\n          marginBottom: \"0.7rem\"\n        }\n      }, \"eIDAS eID\"))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col text-center\"\n      }, __jsx(Button, {\n        onClick: this.proceedWithLocalLDAP,\n        style: {\n          width: \"12rem\",\n          marginBottom: \"0.7rem\"\n        }\n      }, \"Login with your email\")))) : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"Authenticate\");\n\n      var issueVCBut = __jsx(IssueVCButton, {\n        hasRequiredAttributes: this.hasRequiredAttributes,\n        baseUrl: this.props.baseUrl,\n        userSelection: this.props.userSelection,\n        uuid: this.props.sealSession,\n        vcType: \"SEAL-isErasmusAegean\"\n      });\n\n      var eidasCard = this.props.errorUser ? __jsx(\"div\", null, \" \", __jsx(\"p\", null, \"Your are not registerd as a University of the Aegean Erasmus Student\"), \" \", __jsx(\"div\", null, \"Reason: \", this.props.errorUser)) : __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue a myIDs Card, proving your affiliation with UAegean\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to one of the following data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through one of the required data sources (i.e. eIDAS eID or via e-mail), click the \\\"Issue\\\" button to generate and receive your identity card.\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, issueVCBut)))));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        card: eidasCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession,\n        credQROffer: this.props.credQROffer\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sealSession, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  reduxStore.dispatch(setServerSessionId(req.session.id));\n                  DIDOk = req.session.DID;\n                  sealSession = req.session.sealSession;\n                  console.log(\"eidas.js:: in the server the seal session is:: \".concat(req.session.sealSession));\n                  reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n                  reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n                  reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                    DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n                    sealSession = reduxStore.getState().sealSession;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  reduxStore.dispatch(completeDIDAuth(sealSession));\n                }\n\n                if (sealSession) {\n                  reduxStore.dispatch(setSealSession(sealSession));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context2.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  errorUser: req.session.error,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueIsErasmusAegean;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEidasToSelection: function setEidasToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: function setEdugainToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, vcType, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: function startSealSessionAndDidAuth(baseUrl, vcType, isMobile) {\n      dispatch(makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: function setEidas(uri, data) {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: function setEidasRedirect(uri) {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: function setEdugain(uri, data) {\n      dispatch(setEdugainUriPort(uri, data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueIsErasmusAegean);","map":{"version":3,"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","setServerSessionId","completeDIDAuth","makeSealSession","makeSealSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","setEdugainUriPort","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","IssueIsErasmusAegean","props","dispatch","isFetching","sessionData","proceedWithEidasAuth","bind","proceedWithLocalLDAP","hasRequiredAttributes","undefined","eidas","edugain","toSelect","setEidasToSelection","setEdugainToSelection","DID","sealSession","console","log","startSealSessionAndDidAuth","baseUrl","makeConnectionRequest","updateUrl","post","sessionId","variableName","variableValue","eidasRedirectUri","then","data","get","window","location","href","eidasUri","eidasPort","additionalData","sessionFrag","stepNumber","vcSent","stepperSteps","title","qrData","uuid","serverSessionId","eIDASLoginButton","width","marginBottom","issueVCBut","userSelection","eidasCard","errorUser","marginTop","result","credQROffer","reduxStore","req","userSessionData","session","userData","enpoint","id","DIDOk","edugainUri","edugainPort","getState","error","Component","mapStateToProps","state","fetching","endpoint","edugainRedirectUri","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","vcType","didAuthOK","startSealSession","setTheSealSession","setEidas","uri","setEidasRedirect","setEdugain"],"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/issue/isErasmusAegean.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSealSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n  setEdugainUriPort,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueIsErasmusAegean extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this);\n    // this.proceedWithEdugainAuth = this.proceedWithEdugainAuth.bind(this);\n    this.proceedWithLocalLDAP = this.proceedWithLocalLDAP.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      (props.sessionData.eidas !== undefined ||\n        props.sessionData.edugain !== undefined);\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n\n      console.log(\n        `eidas.js:: in the server the seal session is:: ${req.session.sealSession}`\n      );\n      reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n      reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n      reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n    if (sealSession) {\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      errorUser: req.session.error,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      let toSelect = [this.props.sessionData.eidas];\n      this.props.setEidasToSelection(toSelect);\n    }\n    if (this.props.sessionData && this.props.sessionData.edugain) {\n      let toSelect = [this.props.sessionData.edugain];\n      this.props.setEdugainToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      // console.log(`${new Date()} DID not found`);\n      if (!this.props.sealSession) {\n        // console.log(\"startSealSessionAndDidAuth\")\n        console.log(`isMobile ${isMobile()}`);\n\n        this.props.startSealSessionAndDidAuth(\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        ); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        );\n      }\n    }\n    // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n    // console.log(updateUrl)\n    let updateUrl =\n      this.props.baseUrl !== \"\"\n        ? `${this.props.baseUrl}seal/update-session`\n        : `/seal/update-session`;\n    // console.log(\"!!!!!!!!!!!!!!!!1\");\n    // console.log(updateUrl);\n    axios\n      .post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri,\n      })\n      .then((data) => {\n        console.log(data);\n        console.log(\n          `isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`\n        );      \n      });\n  }\n\n  componentDidUpdate() {\n    // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n    // axios\n    //   .post(updateUrl, {\n    //     sessionId: this.props.sealSession,\n    //     variableName: \"ClientCallbackAddr\",\n    //     variableValue: this.props.eidasRedirectUri,\n    //   })\n    //   .then((data) => {\n    //     console.log(data)\n    //     console.log(`isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`);\n    //   });\n  }\n\n  proceedWithEidasAuth() {\n    let updateUrl =\n    this.props.baseUrl !== \"\"\n      ? `${this.props.baseUrl}seal/update-session`\n      : `/seal/update-session`;\n  axios\n    .post(updateUrl, {\n      sessionId: this.props.sealSession,\n      variableName: \"ClientCallbackAddr\",\n      variableValue: this.props.eidasRedirectUri,\n    })\n    .then((data) => {\n      console.log(data);\n      console.log(\n        `isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`\n      );\n\n  axios\n      .get(\n        `${this.props.baseUrl}/vc/make-eidas-token?sessionId=${this.props.sealSession}`\n      )\n      .then((data) => {\n        console.log(`the data is::`);\n        console.log(data);\n        window.location.href = `https://${this.props.eidasUri}:${this.props.eidasPort}/eidas-idp/is/query?msToken=${data.data.additionalData}`;\n        return null;\n      });  });\n    }\n    // async proceedWithEdugainAuth() {\n    //   // register the callbackUri to the SessionManager\n    //   let makeEdugainCallbackToken = await axios.get(\n    //     `${this.props.baseUrl}/vc/make-edugain-callback-token?sessionId=${this.props.sealSession}`\n    //   );\n    //   await axios.post(`${this.props.baseUrl}seal/update-session`, {\n    //     sessionId: this.props.sealSession,\n    //     variableName: \"ClientCallbackAddr\",\n    //     variableValue: `${this.props.eidasRedirectUri}?msToken=${makeEdugainCallbackToken.data.additionalData}`,\n    //   });\n    //   await axios.post(`${this.props.baseUrl}seal/update-session`, {\n    //     sessionId: this.props.sealSession,\n    //     variableName: \"dataStore\",\n    //     variableValue: JSON.stringify({}),\n    //   });\n    //   console.log(\"edugain.js:: session updated\");\n  \n    //   axios\n    //     .get(\n    //       `${this.props.baseUrl}/vc/make-edugain-token?sessionId=${this.props.sealSession}`\n    //     )\n    //     .then((data) => {\n    //       // console.log(`the data is::`);\n    //       // console.log(data);\n    //       let theUrl = this.props.edugainUri.indexOf(\"https\" >= 0)\n    //         ? this.props.edugainUri\n    //         : `http://${this.props.edugainUri}`;\n    //       window.location.href = `https://${this.props.edugainUri}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n    //       //`${theUrl}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n    //       return null;\n    //     });\n    // }\n\n    async proceedWithLocalLDAP() {\n      let sessionFrag = this.props.sealSession\n        ? `?session=${this.props.sealSession}`\n        : \"\";\n      window.location.href = this.props.baseUrl\n        ? `${this.props.baseUrl}uaegean-seal-usability/authenticate${sessionFrag}`\n        : `${this.props.baseUrl}/uaegean-seal-usability/authenticate${sessionFrag}`;\n    }\n\n  render() {\n    let stepNumber =  this.props.vcSent?3:!this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n      { title: 'Authenticate over \"eIDAS eID,  or email\"' },\n      { title: \"Request Issuance\" },\n    ];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }\n\n    let eIDASLoginButton = !this.hasRequiredAttributes ? (\n      <div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEidasAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eIDAS eID\n            </Button>\n          </div>\n\n          {/* <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEdugainAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eduGAIN\n            </Button>\n          </div> */}\n\n\n        </div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithLocalLDAP}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              Login with your email\n            </Button>\n          </div>\n        </div>\n      </div>\n    ) : (\n        <Button variant=\"primary\" disabled>\n          Authenticate\n        </Button>\n      );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"SEAL-isErasmusAegean\"}\n      />\n    );\n\n    let eidasCard = this.props.errorUser ? (\n      <div>\n        {\" \"}\n        <p>\n          Your are not registerd as a University of the Aegean Erasmus Student\n        </p>{\" \"}\n        <div>Reason: {this.props.errorUser}</div>\n      </div>\n    ) : (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Issue a myIDs Card, proving your affiliation with UAegean\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to one of the following data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through one of the required data sources\n            (i.e. eIDAS eID or via e-mail), click the \"Issue\" button to generate\n            and receive your identity card.\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{eIDASLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.serverSessionId}\n        card={eidasCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        credQROffer={this.props.credQROffer}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEidasToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile)\n      );\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: (uri, data) => {\n      dispatch(setEdugainUriPort(uri, data));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueIsErasmusAegean);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}