{"ast":null,"code":"import _regeneratorRuntime from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\"; // get our fontawesome imports\n\nimport { faArrowCircleRight, faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { loginClicked, setUserAttributeSelection, setSessionData, setServerSessionId, setEndpoint, increaseCardIndex, decreaseCardIndex, setBaseUrl } from \"../store\";\nimport Layout from \"../components/Layout\";\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\n\nvar jwt = require(\"jsonwebtoken\");\n\nimport { getPath } from \"../helpers/pathHelper\";\nimport isMobile from \"../helpers/isMobile\";\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.clickMe = _this.clickMe.bind(_assertThisInitialized(_this));\n    _this.increaseCardIndex = _this.increaseCardIndex.bind(_assertThisInitialized(_this));\n    _this.decreaseCardIndex = _this.decreaseCardIndex.bind(_assertThisInitialized(_this));\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData; // this.userEidas = props.userEidas;\n    // this.userEduGain = props.userEduGain;\n\n    _this.userSelection = props.userSelection;\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          sessionData = _this$props.sessionData;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"clickMe\",\n    value: function clickMe() {\n      this.dispatch(loginClicked());\n    }\n  }, {\n    key: \"increaseCardIndex\",\n    value: function increaseCardIndex() {\n      this.props.incCardIndex();\n    }\n  }, {\n    key: \"decreaseCardIndex\",\n    value: function decreaseCardIndex() {\n      this.props.decCardIndex();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = [__jsx(Card, {\n        style: {\n          minHeight: \"47rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue an isStudent Verifiable Credential\"), __jsx(Card.Img, {\n        variant: \"top\",\n        src: getPath(\"student.png\")\n      }), __jsx(Card.Body, null, __jsx(Card.Title, null, \"Click Next to generate VC proving that your are a Student\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Available for all EU citizens\"), __jsx(Card.Text, null, \"You will be issued a Verifiable Credential (VC) proving that you are a student. To do so you will need to authenticate over eIDAS and through an Academic Attribute Provider. \", __jsx(\"br\", null), \"SEAL link those attributes together.\"), __jsx(Card.Link, {\n        href: \"#\"\n      }, __jsx(Link, {\n        as: getPath(\"issue-is-student\"),\n        href: \"issue-is-student\"\n      }, __jsx(Button, {\n        variant: \"primary\"\n      }, \"Next\"))))), __jsx(Card, {\n        style: {\n          minHeight: \"47rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue an eIDAS eID Verifiable Credential\"), __jsx(Card.Img, {\n        style: {\n          minHeight: \"18rem\"\n        },\n        variant: \"top\",\n        src: getPath(\"eID.png\")\n      }), __jsx(Card.Body, null, __jsx(Card.Title, null, \"Click Next to generate an eIDAS eID Verifiable Credential\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Available for all EU citizens\"), __jsx(Card.Text, null, \"You will be required to authenticate over eIDAS in order to import your Personal Identnification information. \", __jsx(\"br\", null), \"SEAL will issue a Verifiable Credential based on your national eID.\"), __jsx(Card.Link, {\n        href: \"#\"\n      }, __jsx(Link // as={getPath(\"issue-eidas\")}\n      , {\n        href: \"\".concat(this.props.baseUrl, \"vc/issue/eidas\")\n      }, __jsx(Button, {\n        variant: \"primary\"\n      }, \"Next\"))))), __jsx(Card, {\n        style: {\n          minHeight: \"47rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue GR Ministry of Education based Verifiable Credential\"), __jsx(Card.Img, {\n        style: {\n          minHeight: \"18rem\"\n        },\n        variant: \"top\",\n        src: getPath(\"minedu.jpg\")\n      }), __jsx(Card.Body, null, __jsx(Card.Title, null, \"Click Next to generate a Verifiable Credential GR MinEdu AcademicId.\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Available for Greek Students and Academic Staff only\"), __jsx(Card.Text, null, \"You will be required to authenticate using your University's Infrastructure. \", __jsx(\"br\", null), \"SEAL will issue a Verifiable Credential your Academic Attributes.\"), __jsx(Card.Link, {\n        href: \"#\"\n      }, __jsx(Link, {\n        href: \"\".concat(this.props.baseUrl, \"issue-gr-academic-id\")\n      }, __jsx(Button, {\n        variant: \"primary\"\n      }, \"Next\"))))), __jsx(Card, {\n        style: {\n          minHeight: \"47rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue an eduGAIN Verifiable Credential\"), __jsx(Card.Img, {\n        style: {\n          minHeight: \"18rem\"\n        },\n        variant: \"top\",\n        src: getPath(\"edugain.png\")\n      }), __jsx(Card.Body, null, __jsx(Card.Title, null, \"Click Next to generate an eduGAIN eID Verifiable Credential\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Available for all Students with Universities part of the eduGAIN Federation\"), __jsx(Card.Text, null, \"You will be required to authenticate using your University's Infrastructure. \", __jsx(\"br\", null), \"SEAL will issue a Verifiable Credential your Academic Attributes.\"), __jsx(Card.Link, {\n        href: \"#\"\n      }, \"Next\"))), __jsx(Card, {\n        style: {\n          minHeight: \"47rem\"\n        }\n      }, __jsx(Card.Header, null, \"Build Your Own Verifiable Credential\"), __jsx(Card.Img, {\n        style: {\n          minHeight: \"18rem\"\n        },\n        variant: \"top\",\n        src: getPath(\"puzzle.png\")\n      }), __jsx(Card.Body, null, __jsx(Card.Title, null, \"Click Next select which attributes to include in a Credential.\"), __jsx(Card.Subtitle, {\n        className: \"mb-2 text-muted\"\n      }, \"Available for all EU citizens\"), __jsx(Card.Text, null, \"Connect with any of the available data sources, and then select which attributes to include in a new Verifiable Credential.\"), __jsx(Card.Link, null, __jsx(Link, {\n        as: getPath(\"attribute-selector\"),\n        href: \"attribute-selector\"\n      }, __jsx(Button, {\n        variant: \"primary\"\n      }, \"Next\")))))];\n      var isRightEnabled = cards.length / 3 > this.props.cardIndex;\n      var isLeftEnabled = this.props.cardIndex > 1;\n\n      var mobileCards = __jsx(Layout, null, __jsx(Row, {\n        style: {\n          marginTop: \"3rem\"\n        }\n      }, __jsx(Col, {\n        xs: 1,\n        style: {\n          marginTop: \"auto\",\n          marginBottom: \"auto\"\n        }\n      }), __jsx(Col, {\n        xs: 10,\n        className: \"container\"\n      }, __jsx(Row, null, cards.map(function (card, indx) {\n        return __jsx(Col, {\n          key: indx,\n          sm: 4,\n          xs: 12\n        }, card);\n      }))), __jsx(Col, {\n        xs: 1,\n        style: {\n          marginTop: \"auto\",\n          marginBottom: \"auto\"\n        }\n      })));\n\n      var desktopCards = __jsx(Layout, null, __jsx(Row, {\n        style: {\n          marginTop: \"3rem\"\n        }\n      }, __jsx(Col, {\n        xs: 1,\n        style: {\n          marginTop: \"auto\",\n          marginBottom: \"auto\"\n        }\n      }, __jsx(Button, {\n        onClick: this.decreaseCardIndex,\n        variant: \"primary\",\n        disabled: !isLeftEnabled\n      }, __jsx(FontAwesomeIcon, {\n        icon: faArrowCircleLeft\n      }))), __jsx(Col, {\n        xs: 10,\n        className: \"container\"\n      }, __jsx(Row, null, cards.filter(function (card, index) {\n        return index / 3 >= _this2.props.cardIndex - 1 && index / 3 < _this2.props.cardIndex;\n      }).map(function (card, indx) {\n        return __jsx(Col, {\n          key: indx,\n          sm: 4,\n          xs: 12\n        }, card);\n      }))), __jsx(Col, {\n        xs: 1,\n        style: {\n          marginTop: \"auto\",\n          marginBottom: \"auto\"\n        }\n      }, __jsx(Button, {\n        onClick: this.increaseCardIndex,\n        variant: \"primary\",\n        disabled: !isRightEnabled\n      }, __jsx(FontAwesomeIcon, {\n        icon: faArrowCircleRight\n      })))));\n\n      return isMobile() ? mobileCards : desktopCards;\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, serverIsFetching, userSessionData, serverSessionId, endpoint, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n                serverIsFetching = reduxStore.getState().fetching; // console.log(`serverIsFetching ${serverIsFetching}`);\n\n                if (false) {\n                  userSessionData = req.session.userData; // the user attributes\n\n                  serverSessionId = req.session.id; // the sessionId that exists on the backend server\n                  // this is stored on the redux store to use it on the client side components\n\n                  endpoint = req.session.endpoint;\n                  reduxStore.dispatch(setServerSessionId(serverSessionId));\n                  reduxStore.dispatch(setEndpoint(endpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\"; // console.log(`index.js setting baseurl to: ${baseUrl}`);\n\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    // console.log(`user data is defined already ${sessionData}`);\n                    userSessionData = reduxStore.getState().sessionData;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                }\n\n                reduxStore.dispatch(setSessionData(userSessionData)); //add the userEidas data to the reduxstore to be able to get it from other componets as well\n\n                reduxStore.dispatch(setUserAttributeSelection([])); //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n                return _context.abrupt(\"return\", {\n                  isFetching: serverIsFetching,\n                  sessionData: userSessionData,\n                  userSelection: userSessionData ? userSessionData.userSelection : null,\n                  qrData: reduxStore.getState().qrData,\n                  baseurl: reduxStore.getState().baseUrl,\n                  serverSessionId: reduxStore.getState().serverSessionId\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  console.log(\"index.js mapping state to props\");\n  console.log(state);\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    // userEidas: state.userEidas, // the eIDAS attributes of the user\n    // userEduGain: state.userEduGain, // the eduGain attributes of the user\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    cardIndex: state.cardIndex,\n    baseUrl: state.baseUrl\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    incCardIndex: function incCardIndex() {\n      dispatch(increaseCardIndex());\n    },\n    decCardIndex: function decCardIndex() {\n      dispatch(decreaseCardIndex());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/home/ni/code/js/seal-issuer/pages/index.js"],"names":["React","Link","connect","faArrowCircleRight","faArrowCircleLeft","FontAwesomeIcon","loginClicked","setUserAttributeSelection","setSessionData","setServerSessionId","setEndpoint","increaseCardIndex","decreaseCardIndex","setBaseUrl","Layout","Button","Row","Col","Card","jwt","require","getPath","isMobile","Index","props","dispatch","clickMe","bind","isFetching","sessionData","userSelection","incCardIndex","decCardIndex","cards","minHeight","baseUrl","isRightEnabled","length","cardIndex","isLeftEnabled","mobileCards","marginTop","marginBottom","map","card","indx","desktopCards","filter","index","reduxStore","req","serverIsFetching","getState","fetching","userSessionData","session","userData","serverSessionId","id","endpoint","console","log","qrData","baseurl","Component","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\n// get our fontawesome imports\nimport {\n  faArrowCircleRight,\n  faArrowCircleLeft\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  loginClicked,\n  setUserAttributeSelection,\n  setSessionData,\n  setServerSessionId,\n  setEndpoint,\n  increaseCardIndex,\n  decreaseCardIndex,\n  setBaseUrl\n} from \"../store\";\nimport Layout from \"../components/Layout\";\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\nconst jwt = require(\"jsonwebtoken\");\nimport { getPath } from \"../helpers/pathHelper\";\nimport isMobile from \"../helpers/isMobile\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.clickMe = this.clickMe.bind(this);\n    this.increaseCardIndex = this.increaseCardIndex.bind(this);\n    this.decreaseCardIndex = this.decreaseCardIndex.bind(this);\n\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    // this.userEidas = props.userEidas;\n    // this.userEduGain = props.userEduGain;\n    this.userSelection = props.userSelection;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    const serverIsFetching = reduxStore.getState().fetching;\n    // console.log(`serverIsFetching ${serverIsFetching}`);\n    let userSessionData;\n    let serverSessionId;\n    let endpoint;\n    let baseUrl;\n\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData; // the user attributes\n      serverSessionId = req.session.id; // the sessionId that exists on the backend server\n      // this is stored on the redux store to use it on the client side components\n      endpoint = req.session.endpoint;\n\n      reduxStore.dispatch(setServerSessionId(serverSessionId));\n      reduxStore.dispatch(setEndpoint(endpoint));\n      baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      // console.log(`index.js setting baseurl to: ${baseUrl}`);\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        // console.log(`user data is defined already ${sessionData}`);\n        userSessionData = reduxStore.getState().sessionData;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    reduxStore.dispatch(setSessionData(userSessionData)); //add the userEidas data to the reduxstore to be able to get it from other componets as well\n    reduxStore.dispatch(setUserAttributeSelection([]));\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      isFetching: serverIsFetching,\n      sessionData: userSessionData,\n      userSelection: userSessionData?userSessionData.userSelection:null,\n      qrData: reduxStore.getState().qrData,\n      baseurl: reduxStore.getState().baseUrl,\n      serverSessionId: reduxStore.getState().serverSessionId,\n      \n    };\n  }\n\n  componentDidMount() {\n    const { dispatch, sessionData } = this.props;\n  }\n\n  componentWillUnmount() {}\n\n  clickMe() {\n    this.dispatch(loginClicked());\n  }\n\n  increaseCardIndex() {\n    this.props.incCardIndex();\n  }\n  decreaseCardIndex() {\n    this.props.decCardIndex();\n  }\n\n  render() {\n    let cards = [\n      <Card style={{ minHeight: \"47rem\" }}>\n        <Card.Header>Issue an isStudent Verifiable Credential</Card.Header>\n        <Card.Img variant=\"top\" src={getPath(\"student.png\")} />\n        <Card.Body>\n          <Card.Title>\n            Click Next to generate VC proving that your are a Student\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Available for all EU citizens\n          </Card.Subtitle>\n          <Card.Text>\n            You will be issued a Verifiable Credential (VC) proving that you are\n            a student. To do so you will need to authenticate over eIDAS and\n            through an Academic Attribute Provider. <br />\n            SEAL link those attributes together.\n          </Card.Text>\n          <Card.Link href=\"#\">\n            <Link as={getPath(\"issue-is-student\")} href=\"issue-is-student\">\n              <Button variant=\"primary\">Next</Button>\n            </Link>\n          </Card.Link>\n        </Card.Body>\n      </Card>,\n      <Card style={{ minHeight: \"47rem\" }}>\n        <Card.Header>Issue an eIDAS eID Verifiable Credential</Card.Header>\n        <Card.Img  style={{ minHeight: \"18rem\" }}variant=\"top\" src={getPath(\"eID.png\")} />\n        <Card.Body>\n          <Card.Title>\n            Click Next to generate an eIDAS eID Verifiable Credential\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Available for all EU citizens\n          </Card.Subtitle>\n          <Card.Text>\n            You will be required to authenticate over eIDAS in order to import\n            your Personal Identnification information. <br />\n            SEAL will issue a Verifiable Credential based on your national eID.\n          </Card.Text>\n          <Card.Link href=\"#\">\n            <Link\n              // as={getPath(\"issue-eidas\")}\n              href={`${this.props.baseUrl}vc/issue/eidas`}\n            >\n              <Button variant=\"primary\">Next</Button>\n            </Link>\n          </Card.Link>\n        </Card.Body>\n      </Card>,\n\n      <Card style={{ minHeight: \"47rem\" }}>\n        <Card.Header>\n          Issue GR Ministry of Education based Verifiable Credential\n        </Card.Header>\n        <Card.Img style={{ minHeight: \"18rem\" }} variant=\"top\" src={getPath(\"minedu.jpg\")} />\n        <Card.Body>\n          <Card.Title>\n            Click Next to generate a Verifiable Credential GR MinEdu AcademicId.\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Available for Greek Students and Academic Staff only\n          </Card.Subtitle>\n          <Card.Text>\n            You will be required to authenticate using your University's\n            Infrastructure. <br />\n            SEAL will issue a Verifiable Credential your Academic Attributes.\n          </Card.Text>\n          <Card.Link href=\"#\">\n            <Link href={`${this.props.baseUrl}issue-gr-academic-id`}>\n              <Button variant=\"primary\">Next</Button>\n            </Link>\n          </Card.Link>\n        </Card.Body>\n      </Card>,\n\n      <Card style={{ minHeight: \"47rem\" }}>\n        <Card.Header>Issue an eduGAIN Verifiable Credential</Card.Header>\n        <Card.Img style={{ minHeight: \"18rem\" }} variant=\"top\" src={getPath(\"edugain.png\")} />\n        <Card.Body>\n          <Card.Title>\n            Click Next to generate an eduGAIN eID Verifiable Credential\n          </Card.Title>\n\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Available for all Students with Universities part of the eduGAIN\n            Federation\n          </Card.Subtitle>\n          <Card.Text>\n            You will be required to authenticate using your University's\n            Infrastructure. <br />\n            SEAL will issue a Verifiable Credential your Academic Attributes.\n          </Card.Text>\n          <Card.Link href=\"#\">Next</Card.Link>\n        </Card.Body>\n      </Card>,\n\n      <Card style={{ minHeight: \"47rem\" }}>\n        <Card.Header>Build Your Own Verifiable Credential</Card.Header>\n        <Card.Img style={{ minHeight: \"18rem\" }} variant=\"top\" src={getPath(\"puzzle.png\")} />\n        <Card.Body>\n          <Card.Title>\n            Click Next select which attributes to include in a Credential.\n          </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Available for all EU citizens\n          </Card.Subtitle>\n          <Card.Text>\n            Connect with any of the available data sources, and then select\n            which attributes to include in a new Verifiable Credential.\n          </Card.Text>\n          <Card.Link>\n            <Link as={getPath(\"attribute-selector\")} href=\"attribute-selector\">\n              <Button variant=\"primary\">Next</Button>\n            </Link>\n          </Card.Link>\n        </Card.Body>\n      </Card>\n    ];\n\n    let isRightEnabled = cards.length / 3 > this.props.cardIndex;\n\n    let isLeftEnabled = this.props.cardIndex > 1;\n\n    let mobileCards = (\n      <Layout>\n        <Row style={{ marginTop: \"3rem\" }}>\n          <Col xs={1} style={{ marginTop: \"auto\", marginBottom: \"auto\" }}></Col>\n\n          <Col xs={10} className={\"container\"}>\n            <Row>\n              {cards.map((card, indx) => {\n                return (\n                  <Col key={indx} sm={4} xs={12}>\n                    {card}\n                  </Col>\n                );\n              })}\n            </Row>\n          </Col>\n          <Col xs={1} style={{ marginTop: \"auto\", marginBottom: \"auto\" }}></Col>\n        </Row>\n      </Layout>\n    );\n\n    let desktopCards = (\n      <Layout>\n        <Row style={{ marginTop: \"3rem\" }}>\n          <Col xs={1} style={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\n            <Button\n              onClick={this.decreaseCardIndex}\n              variant=\"primary\"\n              disabled={!isLeftEnabled}\n            >\n              <FontAwesomeIcon icon={faArrowCircleLeft} />\n            </Button>\n          </Col>\n\n          <Col xs={10} className={\"container\"}>\n            <Row>\n              {cards\n                .filter((card, index) => {\n                  return (\n                    index / 3 >= this.props.cardIndex - 1 &&\n                    index / 3 < this.props.cardIndex\n                  );\n                })\n                .map((card, indx) => {\n                  return (\n                    <Col key={indx} sm={4} xs={12}>\n                      {card}\n                    </Col>\n                  );\n                })}\n            </Row>\n          </Col>\n\n          <Col xs={1} style={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\n            <Button\n              onClick={this.increaseCardIndex}\n              variant=\"primary\"\n              disabled={!isRightEnabled}\n            >\n              <FontAwesomeIcon icon={faArrowCircleRight} />\n            </Button>\n          </Col>\n        </Row>\n      </Layout>\n    );\n\n    return isMobile() ? mobileCards : desktopCards;\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(\"index.js mapping state to props\");\n  console.log(state);\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    // userEidas: state.userEidas, // the eIDAS attributes of the user\n    // userEduGain: state.userEduGain, // the eduGain attributes of the user\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    cardIndex: state.cardIndex,\n    baseUrl: state.baseUrl\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    incCardIndex: () => {\n      dispatch(increaseCardIndex());\n    },\n    decCardIndex: () => {\n      dispatch(decreaseCardIndex());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}