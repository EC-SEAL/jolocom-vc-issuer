{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl, setServerSessionId, completeDIDAuth, makeSealSession, makeSealSessionWithDIDConnecetionRequest, setSealSession, setEdugainUriPort, setEdugainRedirectUri } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nvar IssueEdugain = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueEdugain, _React$Component);\n\n  var _super = _createSuper(IssueEdugain);\n\n  function IssueEdugain(props) {\n    var _this;\n\n    _classCallCheck(this, IssueEdugain);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.proceedWithAuthentication = _this.proceedWithAuthentication.bind(_assertThisInitialized(_this));\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.edugain !== undefined;\n    return _this;\n  }\n\n  _createClass(IssueEdugain, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"edugain.js:: componentDIDMount\");\n\n      if (this.props.sessionData && this.props.sessionData.edugain) {\n        console.log(\"edugain.js :: the data is \".concat(this.props.sessionData.edugain));\n        var toSelect = [this.props.sessionData.edugain];\n        this.props.setEdugainToSelection(toSelect);\n      }\n\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        // console.log(`${new Date()} DID not found`);\n        if (!this.props.sealSession) {\n          // console.log(\"startSealSessionAndDidAuth\")\n          console.log(\"isMobile \".concat(isMobile()));\n          this.props.startSealSessionAndDidAuth(this.props.baseUrl, \"edugain\", isMobile()); //and then makeConnectionRequest\n        } else {\n          // console.log(\"makeConnectionRequest\")\n          console.log(\"isMobile \".concat(isMobile()));\n          this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"edugain\", isMobile());\n        }\n      }\n\n      axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-edugain-callback-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n        axios.post(\"\".concat(_this2.props.baseUrl, \"seal/update-session\"), {\n          sessionId: _this2.props.sealSession,\n          variableName: \"ClientCallbackAddr\",\n          variableValue: \"\".concat(_this2.props.edugainRedirectUri, \"?msToken=\").concat(data.data.additionalData)\n        }).then(function (data) {\n          //the edugain ms expects an empty datastore object to exist in session\n          axios.post(\"\".concat(_this2.props.baseUrl, \"seal/update-session\"), {\n            sessionId: _this2.props.sealSession,\n            variableName: \"dataStore\",\n            variableValue: JSON.stringify({})\n          }).then(function (data) {\n            console.log(\"edugain.js:: session updated\");\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this3 = this;\n\n      console.log(\"edugain.js:: componentDidUpdate \".concat(this.hasRequiredAttributes));\n\n      if (this.props.DID & !this.hasRequiredAttributes) {\n        //if DID auth is completed\n        // register the callbackUri to the SessionManager\n        axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-edugain-callback-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n          axios.post(\"\".concat(_this3.props.baseUrl, \"seal/update-session\"), {\n            sessionId: _this3.props.sealSession,\n            variableName: \"ClientCallbackAddr\",\n            variableValue: \"\".concat(_this3.props.edugainRedirectUri, \"?msToken=\").concat(data.data.additionalData)\n          }).then(function (data) {\n            //the edugain ms expects an empty datastore object to exist in session\n            axios.post(\"\".concat(_this3.props.baseUrl, \"seal/update-session\"), {\n              sessionId: _this3.props.sealSession,\n              variableName: \"dataStore\",\n              variableValue: JSON.stringify({})\n            }).then(function (data) {\n              console.log(\"edugain.js:: session updated\");\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"proceedWithAuthentication\",\n    value: function proceedWithAuthentication() {\n      var _this4 = this;\n\n      axios.get(\"\".concat(this.props.baseUrl, \"/vc/make-edugain-token?sessionId=\").concat(this.props.sealSession)).then(function (data) {\n        // console.log(`the data is::`);\n        // console.log(data);\n        var theUrl = _this4.props.edugainUri.indexOf(\"https\" >= 0) ? _this4.props.edugainUri : \"http://\".concat(_this4.props.edugainUri);\n        window.location.href = \"\".concat(theUrl, \":\").concat(_this4.props.edugainPort, \"/is/query?msToken=\").concat(data.data.additionalData);\n        return null;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n      var stepperSteps = [{\n        title: \"Pair your wallet\"\n      }, {\n        title: 'Authenticate over \"eduGAIN\"'\n      }, {\n        title: \"Request Issuance\"\n      }];\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.serverSessionId,\n          sealSession: this.props.sealSession\n        }));\n      }\n\n      var edugainLoginButton = !this.hasRequiredAttributes ? __jsx(Button, {\n        onClick: this.proceedWithAuthentication\n      }, \"eduGAIN\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"eduGAIN\");\n\n      var issueVCBut = __jsx(IssueVCButton, {\n        hasRequiredAttributes: this.hasRequiredAttributes // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        ,\n        baseUrl: this.props.baseUrl,\n        userSelection: this.props.userSelection,\n        uuid: this.props.sealSession,\n        vcType: \"SEAL-EDUGAIN\"\n      });\n\n      var edugainCard = __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue an EDUGAIN based Verifiable Credential\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to the required data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through the required data sources, click the \\\"Issue\\\" button to generate and receive your VC .\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, edugainLoginButton), __jsx(Col, null, issueVCBut)))));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        card: edugainCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sealSession, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  reduxStore.dispatch(setServerSessionId(req.session.id));\n                  DIDOk = req.session.DID;\n                  sealSession = req.session.sealSession;\n                  console.log(\"edugainjs:: in the server the seal session is:: \".concat(req.session.sealSession));\n                  reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n                  reduxStore.dispatch(setEdugainRedirectUri(req.edugainRedirectUri));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                    DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n                    sealSession = reduxStore.getState().sealSession;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  console.log(\"edugain.js:: will setSessionData\");\n                  console.log(userSessionData);\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  console.log(\"edugain.js:: will set completeDIDAuth\");\n                  reduxStore.dispatch(completeDIDAuth(sealSession));\n                }\n\n                if (sealSession) {\n                  console.log(\"edugain.js:: will set sealSession\");\n                  console.log(sealSession);\n                  reduxStore.dispatch(setSealSession(sealSession));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueEdugain;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    endpoint: state.endpoint,\n    edugainRedirectUri: state.edugainRedirectUri\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEdugainToSelection: function setEdugainToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, vcType, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: function startSealSessionAndDidAuth(baseUrl, vcType, isMobile) {\n      dispatch(makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    },\n    setEdugain: function setEdugain(uri, data) {\n      dispatch(setEdugainUriPort(uri, data));\n    },\n    setEdugainRedirect: function setEdugainRedirect(uri) {\n      dispatch(setEdugainRedirectUri(uri));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEdugain);","map":{"version":3,"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/issue/edugain.js"],"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","setServerSessionId","completeDIDAuth","makeSealSession","makeSealSessionWithDIDConnecetionRequest","setSealSession","setEdugainUriPort","setEdugainRedirectUri","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","IssueEdugain","props","dispatch","isFetching","sessionData","proceedWithAuthentication","bind","hasRequiredAttributes","undefined","edugain","console","log","toSelect","setEdugainToSelection","DID","sealSession","startSealSessionAndDidAuth","baseUrl","makeConnectionRequest","get","then","data","post","sessionId","variableName","variableValue","edugainRedirectUri","additionalData","JSON","stringify","theUrl","edugainUri","indexOf","window","location","href","edugainPort","stepNumber","stepperSteps","title","qrData","uuid","serverSessionId","edugainLoginButton","issueVCBut","userSelection","edugainCard","marginTop","result","vcSent","reduxStore","req","userSessionData","session","userData","enpoint","id","DIDOk","getState","Component","mapStateToProps","state","fetching","endpoint","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","vcType","didAuthOK","startSealSession","setTheSealSession","setEdugain","uri","setEdugainRedirect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSealSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEdugainUriPort,\n  setEdugainRedirectUri,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueEdugain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithAuthentication = this.proceedWithAuthentication.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.edugain !== undefined;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n\n      console.log(\n        `edugainjs:: in the server the seal session is:: ${req.session.sealSession}`\n      );\n      reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n      reduxStore.dispatch(setEdugainRedirectUri(req.edugainRedirectUri));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      console.log(\"edugain.js:: will setSessionData\")\n      console.log(userSessionData)\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      console.log(\"edugain.js:: will set completeDIDAuth\")\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n    if (sealSession) {\n      console.log(\"edugain.js:: will set sealSession\")\n      console.log(sealSession)\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"edugain.js:: componentDIDMount\")\n    if (this.props.sessionData && this.props.sessionData.edugain) {\n      console.log(`edugain.js :: the data is ${this.props.sessionData.edugain}`)\n      let toSelect = [this.props.sessionData.edugain];\n      this.props.setEdugainToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      // console.log(`${new Date()} DID not found`);\n      if (!this.props.sealSession) {\n        // console.log(\"startSealSessionAndDidAuth\")\n        console.log(`isMobile ${isMobile()}`);\n\n        this.props.startSealSessionAndDidAuth(\n          this.props.baseUrl,\n          \"edugain\",\n          isMobile()\n        ); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          \"edugain\",\n          isMobile()\n        );\n      }\n    }\n\n    axios\n      .get(\n        `${this.props.baseUrl}/vc/make-edugain-callback-token?sessionId=${this.props.sealSession}`\n      )\n      .then((data) => {\n        axios\n          .post(`${this.props.baseUrl}seal/update-session`, {\n            sessionId: this.props.sealSession,\n            variableName: \"ClientCallbackAddr\",\n            variableValue: `${this.props.edugainRedirectUri}?msToken=${data.data.additionalData}`,\n          })\n          .then((data) => {\n            //the edugain ms expects an empty datastore object to exist in session\n            axios\n              .post(`${this.props.baseUrl}seal/update-session`, {\n                sessionId: this.props.sealSession,\n                variableName: \"dataStore\",\n                variableValue: JSON.stringify({}),\n              })\n              .then((data) => {\n                console.log(\"edugain.js:: session updated\");\n              });\n          });\n      });\n\n\n  }\n\n  componentDidUpdate() {\n    console.log(`edugain.js:: componentDidUpdate ${this.hasRequiredAttributes}`)\n\n\n    if (this.props.DID & !this.hasRequiredAttributes) {\n      //if DID auth is completed\n      // register the callbackUri to the SessionManager\n      axios\n        .get(\n          `${this.props.baseUrl}/vc/make-edugain-callback-token?sessionId=${this.props.sealSession}`\n        )\n        .then((data) => {\n          axios\n            .post(`${this.props.baseUrl}seal/update-session`, {\n              sessionId: this.props.sealSession,\n              variableName: \"ClientCallbackAddr\",\n              variableValue: `${this.props.edugainRedirectUri}?msToken=${data.data.additionalData}`,\n            })\n            .then((data) => {\n              //the edugain ms expects an empty datastore object to exist in session\n              axios\n                .post(`${this.props.baseUrl}seal/update-session`, {\n                  sessionId: this.props.sealSession,\n                  variableName: \"dataStore\",\n                  variableValue: JSON.stringify({}),\n                })\n                .then((data) => {\n                  console.log(\"edugain.js:: session updated\");\n                });\n            });\n        });\n    }\n  }\n\n  proceedWithAuthentication() {\n    axios\n      .get(\n        `${this.props.baseUrl}/vc/make-edugain-token?sessionId=${this.props.sealSession}`\n      )\n      .then((data) => {\n        // console.log(`the data is::`);\n        // console.log(data);\n        let theUrl = this.props.edugainUri.indexOf(\"https\" >= 0) ? this.props.edugainUri : `http://${this.props.edugainUri}`\n        window.location.href = `${theUrl}:${this.props.edugainPort}/is/query?msToken=${data.data.additionalData}`;\n        return null;\n      });\n  }\n\n  render() {\n    let stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n      { title: 'Authenticate over \"eduGAIN\"' },\n      { title: \"Request Issuance\" },\n    ];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }\n\n    let edugainLoginButton = !this.hasRequiredAttributes ? (\n      <Button onClick={this.proceedWithAuthentication}>eduGAIN</Button>\n    ) : (\n        <Button variant=\"primary\" disabled>\n          eduGAIN\n        </Button>\n      );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"SEAL-EDUGAIN\"}\n      />\n    );\n\n    let edugainCard = (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>Issue an EDUGAIN based Verifiable Credential</Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to the required data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through the required data sources, click\n            the \"Issue\" button to generate and receive your VC .\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{edugainLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.serverSessionId}\n        card={edugainCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    endpoint: state.endpoint,\n    edugainRedirectUri: state.edugainRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEdugainToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile)\n      );\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEdugain: (uri, data) => {\n      dispatch(setEdugainUriPort(uri, data));\n    },\n\n    setEdugainRedirect: (uri) => {\n      dispatch(setEdugainRedirectUri(uri));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEdugain);\n"]},"metadata":{},"sourceType":"module"}