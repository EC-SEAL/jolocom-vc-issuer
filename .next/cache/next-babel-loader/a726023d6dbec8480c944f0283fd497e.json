{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl, setServerSessionId, completeDIDAuth, makeSealSession, makeSealSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri, setEdugainUriPort } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueIsErasmusAegean extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this); // this.proceedWithEdugainAuth = this.proceedWithEdugainAuth.bind(this);\n\n    this.proceedWithLocalLDAP = this.proceedWithLocalLDAP.bind(this);\n    this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && (props.sessionData.eidas !== undefined || props.sessionData.edugain !== undefined);\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n\n    if (true) {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n      console.log(`eidas.js:: in the server the seal session is:: ${req.session.sealSession}`);\n      reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n      reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n      reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    } //this way the userSessionData gets set in all settings\n\n\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n\n    if (sealSession) {\n      reduxStore.dispatch(setSealSession(sealSession));\n    } //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n\n\n    return {\n      sessionData: userSessionData,\n      errorUser: req.session.error,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      let toSelect = [this.props.sessionData.eidas];\n      this.props.setEidasToSelection(toSelect);\n    }\n\n    if (this.props.sessionData && this.props.sessionData.edugain) {\n      let toSelect = [this.props.sessionData.edugain];\n      this.props.setEdugainToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      // console.log(`${new Date()} DID not found`);\n      if (!this.props.sealSession) {\n        // console.log(\"startSealSessionAndDidAuth\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.startSealSessionAndDidAuth(this.props.baseUrl, \"eidas\", isMobile()); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"eidas\", isMobile());\n      }\n    } // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n    // console.log(updateUrl)\n\n\n    let updateUrl = this.props.baseUrl !== \"\" ? `${this.props.baseUrl}seal/update-session` : `/seal/update-session`; // console.log(\"!!!!!!!!!!!!!!!!1\");\n    // console.log(updateUrl);\n\n    axios.post(updateUrl, {\n      sessionId: this.props.sealSession,\n      variableName: \"ClientCallbackAddr\",\n      variableValue: this.props.eidasRedirectUri\n    }).then(data => {\n      console.log(data);\n      console.log(`isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`);\n    });\n  }\n\n  componentDidUpdate() {}\n\n  async proceedWithLocalLDAP() {\n    let sessionFrag = this.props.sealSession ? `?session=${this.props.sealSession}` : \"\";\n    window.location.href = this.props.baseUrl ? `${this.props.baseUrl}uaegean-seal-usability/authenticate${sessionFrag}` : `${this.props.baseUrl}/uaegean-seal-usability/authenticate${sessionFrag}`;\n  }\n\n  async proceedWithEidasAuth() {\n    let sessionFrag = this.props.sealSession ? `?session=${this.props.sealSession}` : \"\";\n    window.location.href = this.props.baseUrl ? `${this.props.baseUrl}eidas/erasmus/response${sessionFrag}` : `${this.props.baseUrl}/eidas/erasmus/response${sessionFrag}`;\n  }\n\n  render() {\n    let stepNumber = this.props.vcSent ? 3 : !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [{\n      title: \"Pair your wallet\"\n    }, {\n      title: 'Authenticate over \"eIDAS eID,  or email\"'\n    }, {\n      title: \"Request Issuance\"\n    }];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), __jsx(ConnectMobile, {\n        baseUrl: this.props.baseUrl,\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        sealSession: this.props.sealSession\n      }));\n    }\n\n    let eIDASLoginButton = !this.hasRequiredAttributes ? __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col text-center\"\n    }, __jsx(Button, {\n      onClick: this.proceedWithEidasAuth,\n      style: {\n        width: \"12rem\",\n        marginBottom: \"0.7rem\"\n      }\n    }, \"eIDAS eID\"))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col text-center\"\n    }, __jsx(Button, {\n      onClick: this.proceedWithLocalLDAP,\n      style: {\n        width: \"12rem\",\n        marginBottom: \"0.7rem\"\n      }\n    }, \"Login with your email\")))) : __jsx(Button, {\n      variant: \"primary\",\n      disabled: true\n    }, \"Authenticate\");\n\n    let issueVCBut = __jsx(IssueVCButton, {\n      hasRequiredAttributes: this.hasRequiredAttributes,\n      baseUrl: this.props.baseUrl,\n      userSelection: this.props.userSelection,\n      uuid: this.props.sealSession,\n      vcType: \"SEAL-isErasmusAegean\"\n    });\n\n    let eidasCard = this.props.errorUser ? __jsx(\"div\", null, \" \", __jsx(\"p\", null, \"Your are not registerd as a University of the Aegean Erasmus Student\"), \" \", __jsx(\"div\", null, \"Reason: \", this.props.errorUser)) : __jsx(Card, {\n      className: \"text-center\",\n      style: {\n        marginTop: \"2rem\"\n      }\n    }, __jsx(Card.Header, null, \"Issue a myIDs Card, proving your affiliation with UAegean\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to one of the following data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through one of the required data sources (i.e. eIDAS eID or via e-mail), click the \\\"Issue\\\" button to generate and receive your identity card.\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, issueVCBut)))));\n\n    let result = __jsx(PairOrCard, {\n      qrData: this.props.qrData,\n      DID: this.props.DID,\n      baseUrl: this.props.baseUrl,\n      uuid: this.props.uuid,\n      serverSessionId: this.props.serverSessionId,\n      card: eidasCard,\n      vcSent: this.props.vcSent,\n      sealSession: this.props.sealSession,\n      credQROffer: this.props.credQROffer\n    });\n\n    return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n      steps: stepperSteps,\n      activeNum: stepNumber\n    }))), result, __jsx(Row, null, __jsx(HomeButton, {\n      baseUrl: this.props.baseUrl\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setEidasToSelection: set => {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: set => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: steps => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: endpont => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: uuid => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: baseUrl => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile));\n    },\n    setTheSealSession: sessionId => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: uri => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: (uri, data) => {\n      dispatch(setEdugainUriPort(uri, data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueIsErasmusAegean);","map":{"version":3,"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","setServerSessionId","completeDIDAuth","makeSealSession","makeSealSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","setEdugainUriPort","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","IssueIsErasmusAegean","Component","constructor","props","dispatch","isFetching","sessionData","proceedWithEidasAuth","bind","proceedWithLocalLDAP","hasRequiredAttributes","undefined","eidas","edugain","getInitialProps","reduxStore","req","userSessionData","DIDOk","sealSession","session","userData","enpoint","baseUrl","id","DID","console","log","eidasUri","eidasPort","eidasRedirectUri","edugainUri","edugainPort","getState","errorUser","error","qrData","vcSent","componentDidMount","toSelect","setEidasToSelection","setEdugainToSelection","startSealSessionAndDidAuth","makeConnectionRequest","updateUrl","post","sessionId","variableName","variableValue","then","data","componentDidUpdate","sessionFrag","window","location","href","render","stepNumber","stepperSteps","title","uuid","serverSessionId","eIDASLoginButton","width","marginBottom","issueVCBut","userSelection","eidasCard","marginTop","result","credQROffer","mapStateToProps","state","fetching","endpoint","edugainRedirectUri","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","vcType","didAuthOK","startSealSession","setTheSealSession","setEidas","uri","setEidasRedirect","setEdugain"],"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/issue/isErasmusAegean.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSealSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n  setEdugainUriPort,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueIsErasmusAegean extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this);\n    // this.proceedWithEdugainAuth = this.proceedWithEdugainAuth.bind(this);\n    this.proceedWithLocalLDAP = this.proceedWithLocalLDAP.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      (props.sessionData.eidas !== undefined ||\n        props.sessionData.edugain !== undefined);\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n\n      console.log(\n        `eidas.js:: in the server the seal session is:: ${req.session.sealSession}`\n      );\n      reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n      reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n      reduxStore.dispatch(setEdugainUriPort(req.edugainUri, req.edugainPort));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n    if (sealSession) {\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      errorUser: req.session.error,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      let toSelect = [this.props.sessionData.eidas];\n      this.props.setEidasToSelection(toSelect);\n    }\n    if (this.props.sessionData && this.props.sessionData.edugain) {\n      let toSelect = [this.props.sessionData.edugain];\n      this.props.setEdugainToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      // console.log(`${new Date()} DID not found`);\n      if (!this.props.sealSession) {\n        // console.log(\"startSealSessionAndDidAuth\")\n        console.log(`isMobile ${isMobile()}`);\n\n        this.props.startSealSessionAndDidAuth(\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        ); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        );\n      }\n    }\n    // let updateUrl = this.props.baseUrl !== \"\"?`${this.props.baseUrl}seal/update-session`:`/seal/update-session`\n    // console.log(updateUrl)\n    let updateUrl =\n      this.props.baseUrl !== \"\"\n        ? `${this.props.baseUrl}seal/update-session`\n        : `/seal/update-session`;\n    // console.log(\"!!!!!!!!!!!!!!!!1\");\n    // console.log(updateUrl);\n    axios\n      .post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri,\n      })\n      .then((data) => {\n        console.log(data);\n        console.log(\n          `isErasmusAegean.js:: session updated with ${this.props.eidasRedirectUri}`\n        );\n      });\n  }\n\n  componentDidUpdate() {}\n\n  async proceedWithLocalLDAP() {\n    let sessionFrag = this.props.sealSession\n      ? `?session=${this.props.sealSession}`\n      : \"\";\n    window.location.href = this.props.baseUrl\n      ? `${this.props.baseUrl}uaegean-seal-usability/authenticate${sessionFrag}`\n      : `${this.props.baseUrl}/uaegean-seal-usability/authenticate${sessionFrag}`;\n  }\n\n  async proceedWithEidasAuth() {\n    let sessionFrag = this.props.sealSession\n      ? `?session=${this.props.sealSession}`\n      : \"\";\n    window.location.href = this.props.baseUrl\n      ? `${this.props.baseUrl}eidas/erasmus/response${sessionFrag}`\n      : `${this.props.baseUrl}/eidas/erasmus/response${sessionFrag}`;\n  }\n\n  render() {\n    let stepNumber = this.props.vcSent\n      ? 3\n      : !this.props.DID\n      ? 0\n      : this.hasRequiredAttributes\n      ? 2\n      : 1;\n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n      { title: 'Authenticate over \"eIDAS eID,  or email\"' },\n      { title: \"Request Issuance\" },\n    ];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }\n\n    let eIDASLoginButton = !this.hasRequiredAttributes ? (\n      <div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEidasAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eIDAS eID\n            </Button>\n          </div>\n\n          {/* <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEdugainAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eduGAIN\n            </Button>\n          </div> */}\n        </div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithLocalLDAP}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              Login with your email\n            </Button>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <Button variant=\"primary\" disabled>\n        Authenticate\n      </Button>\n    );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"SEAL-isErasmusAegean\"}\n      />\n    );\n\n    let eidasCard = this.props.errorUser ? (\n      <div>\n        {\" \"}\n        <p>\n          Your are not registerd as a University of the Aegean Erasmus Student\n        </p>{\" \"}\n        <div>Reason: {this.props.errorUser}</div>\n      </div>\n    ) : (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Issue a myIDs Card, proving your affiliation with UAegean\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to one of the following data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through one of the required data sources\n            (i.e. eIDAS eID or via e-mail), click the \"Issue\" button to generate\n            and receive your identity card.\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{eIDASLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.serverSessionId}\n        card={eidasCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        credQROffer={this.props.credQROffer}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEidasToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile)\n      );\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: (uri, data) => {\n      dispatch(setEdugainUriPort(uri, data));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IssueIsErasmusAegean);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}