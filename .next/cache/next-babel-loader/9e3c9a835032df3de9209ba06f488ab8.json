{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport QrPrompt from \"./QrPrompt\";\nimport SSE from \"./Sse.js\";\n\nconst PairOrCard = props => {\n  let vcSentToUser = __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col\",\n    style: {\n      marginTop: \"3rem\",\n      marginBottom: \"3rem\",\n      textAlign: \"center\"\n    }\n  }, __jsx(\"img\", {\n    alt: \"\",\n    src: \"/finished.png\",\n    style: {\n      maxWidth: \"15rem\",\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  }), __jsx(\"p\", null, \"The verifiable credential has been sent to your mobile phone succesfully!\", __jsx(\"br\", null), \"You should receive a notification, prompting you to store it, very soon. Please check your wallet notifications\")));\n\n  if (props.vcSent) {\n    return vcSentToUser;\n  }\n\n  if (props.qrData && !props.DID) {\n    let sseEndpoint = props.baseUrl ? `${props.endpoint}/${props.baseUrl}` : props.endpoint;\n    return __jsx(\"div\", null, __jsx(QrPrompt, {\n      qrData: props.qrData,\n      message: \"SEAL is requesting to connect your uPort wallet:\",\n      permissions: [\"Push Notifications\"],\n      baseUrl: props.baseUrl\n    }), __jsx(SSE, {\n      uuid: props.uuid,\n      endpoint: sseEndpoint,\n      serverSessionId: props.serverSessionId,\n      sealSession: props.sealSession\n    }));\n  } else {\n    if (props.credQROffer) {\n      return __jsx(\"div\", null, __jsx(QrPrompt, {\n        qrData: props.credQROffer,\n        message: \"Your Verifiable Credential is Ready!\",\n        permissions: [\"Push Credential\"],\n        baseUrl: props.baseUrl\n      }), __jsx(SSE, {\n        uuid: props.uuid,\n        endpoint: sseEndpoint,\n        serverSessionId: props.serverSessionId,\n        sealSession: props.sealSession\n      }));\n    } else {\n      if (props.DID) {\n        return props.card;\n      } else {\n        return __jsx(\"div\", null, \"Generating Wallet Pairing Request...\");\n      }\n    }\n  }\n};\n\nexport default PairOrCard;","map":{"version":3,"sources":["/home/ni/code/js/jolocom-seal-issuer/components/PairOrCard.js"],"names":["QrPrompt","SSE","PairOrCard","props","vcSentToUser","marginTop","marginBottom","textAlign","maxWidth","display","marginLeft","marginRight","vcSent","qrData","DID","sseEndpoint","baseUrl","endpoint","uuid","serverSessionId","sealSession","credQROffer","card"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,UAAhB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,MAAIC,YAAY,GACd;AAAK,IAAA,SAAS,EAAE;AAAhB,KACE;AACE,IAAA,SAAS,EAAE,KADb;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,MADN;AAELC,MAAAA,YAAY,EAAE,MAFT;AAGLC,MAAAA,SAAS,EAAE;AAHN;AAFT,KAQE;AACE,IAAA,GAAG,EAAC,EADN;AAEE,IAAA,GAAG,EAAC,eAFN;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,OADL;AAELC,MAAAA,OAAO,EAAE,OAFJ;AAGLC,MAAAA,UAAU,EAAE,MAHP;AAILC,MAAAA,WAAW,EAAE;AAJR;AAHT,IARF,EAkBE,8FAGE,iBAHF,oHAlBF,CADF,CADF;;AA+BA,MAAIR,KAAK,CAACS,MAAV,EAAkB;AAChB,WAAOR,YAAP;AACD;;AAED,MAAID,KAAK,CAACU,MAAN,IAAgB,CAACV,KAAK,CAACW,GAA3B,EAAgC;AAC9B,QAAIC,WAAW,GAAGZ,KAAK,CAACa,OAAN,GACb,GAAEb,KAAK,CAACc,QAAS,IAAGd,KAAK,CAACa,OAAQ,EADrB,GAEdb,KAAK,CAACc,QAFV;AAGA,WACE,mBACE,MAAC,QAAD;AACE,MAAA,MAAM,EAAEd,KAAK,CAACU,MADhB;AAEE,MAAA,OAAO,EAAE,kDAFX;AAGE,MAAA,WAAW,EAAE,CAAC,oBAAD,CAHf;AAIE,MAAA,OAAO,EAAEV,KAAK,CAACa;AAJjB,MADF,EAOE,MAAC,GAAD;AACE,MAAA,IAAI,EAAEb,KAAK,CAACe,IADd;AAEE,MAAA,QAAQ,EAAEH,WAFZ;AAGE,MAAA,eAAe,EAAEZ,KAAK,CAACgB,eAHzB;AAIE,MAAA,WAAW,EAAIhB,KAAK,CAACiB;AAJvB,MAPF,CADF;AAgBD,GApBD,MAoBO;AACL,QAAGjB,KAAK,CAACkB,WAAT,EAAqB;AACnB,aACE,mBACE,MAAC,QAAD;AACE,QAAA,MAAM,EAAElB,KAAK,CAACkB,WADhB;AAEE,QAAA,OAAO,EAAE,sCAFX;AAGE,QAAA,WAAW,EAAE,CAAC,iBAAD,CAHf;AAIE,QAAA,OAAO,EAAElB,KAAK,CAACa;AAJjB,QADF,EAOE,MAAC,GAAD;AACE,QAAA,IAAI,EAAEb,KAAK,CAACe,IADd;AAEE,QAAA,QAAQ,EAAEH,WAFZ;AAGE,QAAA,eAAe,EAAEZ,KAAK,CAACgB,eAHzB;AAIE,QAAA,WAAW,EAAIhB,KAAK,CAACiB;AAJvB,QAPF,CADF;AAgBD,KAjBD,MAiBK;AACH,UAAIjB,KAAK,CAACW,GAAV,EAAe;AACb,eAAOX,KAAK,CAACmB,IAAb;AACD,OAFD,MAEO;AACL,eAAO,0DAAP;AACD;AACF;AAEF;AACF,CAnFD;;AAqFA,eAAepB,UAAf","sourcesContent":["import QrPrompt from \"./QrPrompt\";\nimport SSE from \"./Sse.js\";\n\nconst PairOrCard = props => {\n  let vcSentToUser = (\n    <div className={\"row\"}>\n      <div\n        className={\"col\"}\n        style={{\n          marginTop: \"3rem\",\n          marginBottom: \"3rem\",\n          textAlign: \"center\"\n        }}\n      >\n        <img\n          alt=\"\"\n          src=\"/finished.png\"\n          style={{\n            maxWidth: \"15rem\",\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n        />\n        <p>\n          The verifiable credential has been sent to your mobile phone\n          succesfully!\n          <br />\n          You should receive a notification, prompting you to store it, very\n          soon. Please check your wallet notifications\n        </p>\n      </div>\n    </div>\n  );\n\n  if (props.vcSent) {\n    return vcSentToUser;\n  }\n\n  if (props.qrData && !props.DID) {\n    let sseEndpoint = props.baseUrl\n      ? `${props.endpoint}/${props.baseUrl}`\n      : props.endpoint;\n    return (\n      <div>\n        <QrPrompt\n          qrData={props.qrData}\n          message={\"SEAL is requesting to connect your uPort wallet:\"}\n          permissions={[\"Push Notifications\"]}\n          baseUrl={props.baseUrl}\n        />\n        <SSE\n          uuid={props.uuid}\n          endpoint={sseEndpoint}\n          serverSessionId={props.serverSessionId}\n          sealSession = {props.sealSession}\n        />\n      </div>\n    );\n  } else {\n    if(props.credQROffer){\n      return (\n        <div>\n          <QrPrompt\n            qrData={props.credQROffer}\n            message={\"Your Verifiable Credential is Ready!\"}\n            permissions={[\"Push Credential\"]}\n            baseUrl={props.baseUrl}\n          />\n          <SSE\n            uuid={props.uuid}\n            endpoint={sseEndpoint}\n            serverSessionId={props.serverSessionId}\n            sealSession = {props.sealSession}\n          />\n        </div>\n      );\n    }else{\n      if (props.DID) {\n        return props.card;\n      } else {\n        return <div>Generating Wallet Pairing Request...</div>;\n      }\n    }\n    \n  }\n};\n\nexport default PairOrCard;\n"]},"metadata":{},"sourceType":"module"}