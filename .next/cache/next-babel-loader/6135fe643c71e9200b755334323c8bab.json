{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl, setServerSessionId, completeDIDAuth, makeSealSession, makeSealSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri, setEdugainUriPort } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n\nclass IssueEidas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this);\n    this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.eidas !== undefined;\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n\n    if (true) {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n      reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n      reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    } //this way the userSessionData gets set in all settings\n\n\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n\n    if (sealSession) {\n      reduxStore.dispatch(setSealSession(sealSession));\n    } //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n\n\n    return {\n      sessionData: userSessionData,\n      errorUser: req.session.error,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      let toSelect = [this.props.sessionData.eidas];\n      this.props.setEidasToSelection(toSelect);\n    }\n\n    if (this.props.sessionData && this.props.sessionData.edugain) {\n      let toSelect = [this.props.sessionData.edugain];\n      this.props.setEdugainToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      if (!this.props.sealSession) {\n        console.log(`isMobile ${isMobile()}`);\n        this.props.startSealSessionAndDidAuth(this.props.baseUrl, \"eidas\", isMobile()); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"eidas\", isMobile());\n      }\n    }\n\n    let updateUrl = this.props.baseUrl !== \"\" ? `${this.props.baseUrl}seal/update-session` : `/seal/update-session`;\n    axios.post(updateUrl, {\n      sessionId: this.props.sealSession,\n      variableName: \"ClientCallbackAddr\",\n      variableValue: this.props.eidasRedirectUri\n    }).then(data => {\n      console.log(data);\n      console.log(`eidas.js:: session updated with ${this.props.eidasRedirectUri}`);\n    });\n  }\n\n  async proceedWithEidasAuth() {\n    let sessionFrag = this.props.sealSession ? `?session=${this.props.sealSession}` : \"\";\n    window.location.href = this.props.baseUrl ? `${this.props.baseUrl}/vc/eidas/response${sessionFrag}` : `${this.props.baseUrl}/vc/eidas/response${sessionFrag}`;\n  }\n\n  render() {\n    let stepNumber = this.props.vcSent ? 3 : !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [{\n      title: \"Pair your wallet\"\n    }, {\n      title: 'Authenticate over \"eIDAS eID,  or email\"'\n    }, {\n      title: \"Request Issuance\"\n    }];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), __jsx(ConnectMobile, {\n        baseUrl: this.props.baseUrl,\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        sealSession: this.props.sealSession\n      }));\n    }\n\n    let eIDASLoginButton = !this.hasRequiredAttributes ? __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col text-center\"\n    }, __jsx(Button, {\n      onClick: this.proceedWithEidasAuth,\n      style: {\n        width: \"12rem\",\n        marginBottom: \"0.7rem\"\n      }\n    }, \"eIDAS eID\"))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col text-center\"\n    }, __jsx(Button, {\n      onClick: this.proceedWithLocalLDAP,\n      style: {\n        width: \"12rem\",\n        marginBottom: \"0.7rem\"\n      }\n    }, \"Login with your email\")))) : __jsx(Button, {\n      variant: \"primary\",\n      disabled: true\n    }, \"Authenticate\");\n\n    let issueVCBut = __jsx(IssueVCButton, {\n      hasRequiredAttributes: this.hasRequiredAttributes,\n      baseUrl: this.props.baseUrl,\n      userSelection: this.props.userSelection,\n      uuid: this.props.sealSession,\n      vcType: \"SEAL-isErasmusAegean\"\n    });\n\n    let eidasCard = this.props.errorUser ? __jsx(\"div\", null, \" \", __jsx(\"p\", null, \"Your are not registerd as a University of the Aegean Erasmus Student\"), \" \", __jsx(\"div\", null, \"Reason: \", this.props.errorUser)) : __jsx(Card, {\n      className: \"text-center\",\n      style: {\n        marginTop: \"2rem\"\n      }\n    }, __jsx(Card.Header, null, \"Issue a myIDs Card, proving your affiliation with UAegean\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to one of the following data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through one of the required data sources (i.e. eIDAS eID or via e-mail), click the \\\"Issue\\\" button to generate and receive your identity card.\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, issueVCBut)))));\n\n    let result = __jsx(PairOrCard, {\n      qrData: this.props.qrData,\n      DID: this.props.DID,\n      baseUrl: this.props.baseUrl,\n      uuid: this.props.uuid,\n      serverSessionId: this.props.serverSessionId,\n      card: eidasCard,\n      vcSent: this.props.vcSent,\n      sealSession: this.props.sealSession,\n      credQROffer: this.props.credQROffer\n    });\n\n    return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n      steps: stepperSteps,\n      activeNum: stepNumber\n    }))), result, __jsx(Row, null, __jsx(HomeButton, {\n      baseUrl: this.props.baseUrl\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setEidasToSelection: set => {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: set => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: steps => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: endpont => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: uuid => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: baseUrl => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile));\n    },\n    setTheSealSession: sessionId => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: uri => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: (uri, data) => {\n      dispatch(setEdugainUriPort(uri, data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEidas);","map":{"version":3,"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","setServerSessionId","completeDIDAuth","makeSealSession","makeSealSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","setEdugainUriPort","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","IssueEidas","Component","constructor","props","dispatch","isFetching","sessionData","proceedWithEidasAuth","bind","hasRequiredAttributes","undefined","eidas","getInitialProps","reduxStore","req","userSessionData","DIDOk","sealSession","session","userData","enpoint","baseUrl","id","DID","eidasUri","eidasPort","eidasRedirectUri","getState","console","log","errorUser","error","qrData","vcSent","componentDidMount","toSelect","setEidasToSelection","edugain","setEdugainToSelection","startSealSessionAndDidAuth","makeConnectionRequest","updateUrl","post","sessionId","variableName","variableValue","then","data","sessionFrag","window","location","href","render","stepNumber","stepperSteps","title","uuid","serverSessionId","eIDASLoginButton","width","marginBottom","proceedWithLocalLDAP","issueVCBut","userSelection","eidasCard","marginTop","result","credQROffer","mapStateToProps","state","fetching","endpoint","edugainUri","edugainPort","edugainRedirectUri","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","vcType","didAuthOK","startSealSession","setTheSealSession","setEidas","uri","setEidasRedirect","setEdugain"],"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/issue/eidas.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSealSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n  setEdugainUriPort,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\nimport isMobile from \"../../../helpers/isMobile\";\n\nclass IssueEidas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithEidasAuth = this.proceedWithEidasAuth.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.eidas !== undefined;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n      reduxStore.dispatch(setEidasUriPort(req.eidasUri, req.eidasPort));\n      reduxStore.dispatch(setEidasRedirectUri(req.eidasRedirectUri));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n    }\n    if (sealSession) {\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      errorUser: req.session.error,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      let toSelect = [this.props.sessionData.eidas];\n      this.props.setEidasToSelection(toSelect);\n    }\n    if (this.props.sessionData && this.props.sessionData.edugain) {\n      let toSelect = [this.props.sessionData.edugain];\n      this.props.setEdugainToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      if (!this.props.sealSession) {\n        console.log(`isMobile ${isMobile()}`);\n        this.props.startSealSessionAndDidAuth(\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        ); //and then makeConnectionRequest\n      } else {\n        // console.log(\"makeConnectionRequest\")\n        console.log(`isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          \"eidas\",\n          isMobile()\n        );\n      }\n    }\n    let updateUrl =\n      this.props.baseUrl !== \"\"\n        ? `${this.props.baseUrl}seal/update-session`\n        : `/seal/update-session`;\n    axios\n      .post(updateUrl, {\n        sessionId: this.props.sealSession,\n        variableName: \"ClientCallbackAddr\",\n        variableValue: this.props.eidasRedirectUri,\n      })\n      .then((data) => {\n        console.log(data);\n        console.log(\n          `eidas.js:: session updated with ${this.props.eidasRedirectUri}`\n        );\n      });\n  }\n\n  async proceedWithEidasAuth() {\n    let sessionFrag = this.props.sealSession\n      ? `?session=${this.props.sealSession}`\n      : \"\";\n    window.location.href = this.props.baseUrl\n      ? `${this.props.baseUrl}/vc/eidas/response${sessionFrag}`\n      : `${this.props.baseUrl}/vc/eidas/response${sessionFrag}`;\n  }\n\n  render() {\n    let stepNumber = this.props.vcSent\n      ? 3\n      : !this.props.DID\n      ? 0\n      : this.hasRequiredAttributes\n      ? 2\n      : 1;\n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n      { title: 'Authenticate over \"eIDAS eID,  or email\"' },\n      { title: \"Request Issuance\" },\n    ];\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }\n\n    let eIDASLoginButton = !this.hasRequiredAttributes ? (\n      <div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEidasAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eIDAS eID\n            </Button>\n          </div>\n\n          {/* <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithEdugainAuth}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              eduGAIN\n            </Button>\n          </div> */}\n        </div>\n        <div className=\"row\">\n          <div className=\"col text-center\">\n            <Button\n              onClick={this.proceedWithLocalLDAP}\n              style={{ width: \"12rem\", marginBottom: \"0.7rem\" }}\n            >\n              Login with your email\n            </Button>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <Button variant=\"primary\" disabled>\n        Authenticate\n      </Button>\n    );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"SEAL-isErasmusAegean\"}\n      />\n    );\n\n    let eidasCard = this.props.errorUser ? (\n      <div>\n        {\" \"}\n        <p>\n          Your are not registerd as a University of the Aegean Erasmus Student\n        </p>{\" \"}\n        <div>Reason: {this.props.errorUser}</div>\n      </div>\n    ) : (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Issue a myIDs Card, proving your affiliation with UAegean\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to one of the following data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through one of the required data sources\n            (i.e. eIDAS eID or via e-mail), click the \"Issue\" button to generate\n            and receive your identity card.\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{eIDASLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.serverSessionId}\n        card={eidasCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        credQROffer={this.props.credQROffer}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    serverSessionId: state.serverSessionId,\n    uuid: state.uuid,\n    vcSent: state.vcSent,\n    sealSession: state.sealSession,\n    eidasUri: state.eidasUri,\n    eidasPort: state.eidasPort,\n    endpoint: state.endpoint,\n    eidasRedirectUri: state.eidasRedirectUri,\n    credQROffer: state.credQROffer,\n    edugainUri: state.edugainUri,\n    edugainPort: state.edugainPort,\n    edugainRedirectUri: state.edugainRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEidasToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setEdugainToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSealSessionAndDidAuth: (baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeSealSessionWithDIDConnecetionRequest(baseUrl, vcType, isMobile)\n      );\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n    setEdugain: (uri, data) => {\n      dispatch(setEdugainUriPort(uri, data));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEidas);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}