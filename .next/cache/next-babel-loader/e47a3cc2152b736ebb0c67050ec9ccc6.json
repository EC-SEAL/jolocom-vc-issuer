{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setDidCallback, makeOnlyConnectionRequest, setEndpoint, setBaseUrl, setSealSession, setServerSessionId } from \"../../store\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../components/Stepper\";\nimport HomeButton from \"../../components/HomeButton\";\nimport IssueVCButton from \"../../components/IssueVCButton\";\nimport PairOrCard from \"../../components/PairOrCard\";\nimport ConnectMobile from \"../../components/ConnectMobile\";\nimport isMobile from \"../../helpers/isMobile\";\n\nclass DisplayDidAuth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    let sealSession;\n    let callback;\n\n    if (true) {\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      sealSession = req.session.sealSession;\n      callback = req.session.callback;\n    } else {\n      sealSession = reduxStore.getState().sealSession;\n      callback = reduxStore.getState().callback;\n    }\n\n    reduxStore.dispatch(setSealSession(sealSession));\n    reduxStore.dispatch(setDidCallback(callback));\n    return {\n      qrData: reduxStore.getState().qrData,\n      sealSession: reduxStore.getState().sealSession,\n      callback: reduxStore.getState().callback\n    };\n  }\n\n  componentDidMount() {\n    // generated the connectionRequest\n    this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"didAuth\", isMobile());\n  }\n\n  componentDidUpdate() {\n    if (this.props.DID) {\n      //if DID auth is completed\n      // redirect to the callbackAddress\n      window.location.href = this.props.callback;\n    }\n  }\n\n  render() {\n    let stepperSteps = [{\n      title: \"Pair your wallet\"\n    }];\n\n    let result = __jsx(PairOrCard, {\n      qrData: this.props.qrData,\n      DID: this.props.DID,\n      baseUrl: this.props.baseUrl,\n      uuid: this.props.sealSession,\n      card: __jsx(\"dib\", null, \"DID authentication completed successfully\"),\n      vcSent: this.props.vcSent,\n      sealSession: this.props.sealSession,\n      serverSessionId: this.props.serverSessionId\n    });\n\n    if (isMobile()) {\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), __jsx(ConnectMobile, {\n        baseUrl: this.props.baseUrl,\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.serverSessionId,\n        sealSession: this.props.sealSession\n      }));\n    }\n\n    return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n      steps: stepperSteps,\n      activeNum: 1\n    }))), result, __jsx(Row, null, __jsx(HomeButton, {\n      baseUrl: this.props.baseUrl\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    sealSession: state.sealSession,\n    callback: state.didAuthCallback,\n    serverSessionId: state.serverSessionId\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSteps: steps => {\n      dispatch(setStepperSteps(steps));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: uuid => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    setCallback: callback => {\n      dispatch(setDidCallback(callback));\n    },\n    setSealSession: session => {\n      dispatch(setSealSession(session));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayDidAuth);","map":{"version":3,"sources":["/home/ni/code/js/seal-issuer/pages/vc/didAuth.js"],"names":["React","axios","setDidCallback","makeOnlyConnectionRequest","setEndpoint","setBaseUrl","setSealSession","setServerSessionId","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","DisplayDidAuth","Component","constructor","props","dispatch","isFetching","sessionData","getInitialProps","reduxStore","req","sealSession","callback","session","enpoint","baseUrl","id","getState","qrData","componentDidMount","makeConnectionRequest","componentDidUpdate","DID","window","location","href","render","stepperSteps","title","result","vcSent","serverSessionId","stepNumber","uuid","mapStateToProps","state","fetching","didAuthCallback","mapDispatchToProps","setSteps","steps","setStepperSteps","vcType","didAuthOK","completeDIDAuth","setCallback"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setDidCallback,\n  makeOnlyConnectionRequest,\n  setEndpoint,\n  setBaseUrl,\n  setSealSession,\n  setServerSessionId,\n} from \"../../store\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../components/Stepper\";\nimport HomeButton from \"../../components/HomeButton\";\nimport IssueVCButton from \"../../components/IssueVCButton\";\nimport PairOrCard from \"../../components/PairOrCard\";\nimport ConnectMobile from \"../../components/ConnectMobile\";\nimport isMobile from \"../../helpers/isMobile\";\n\nclass DisplayDidAuth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let sealSession;\n    let callback;\n    if (typeof window === \"undefined\") {\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      sealSession = req.session.sealSession;\n      callback = req.session.callback;\n    } else {\n      sealSession = reduxStore.getState().sealSession;\n      callback = reduxStore.getState().callback;\n    }\n    reduxStore.dispatch(setSealSession(sealSession));\n    reduxStore.dispatch(setDidCallback(callback));\n\n\n    return {\n      qrData: reduxStore.getState().qrData,\n      sealSession: reduxStore.getState().sealSession,\n      callback: reduxStore.getState().callback\n    };\n  }\n\n  componentDidMount() {\n    // generated the connectionRequest\n    this.props.makeConnectionRequest(\n      this.props.sealSession,\n      this.props.baseUrl,\n      \"didAuth\",\n      isMobile()\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.DID) {\n      //if DID auth is completed\n      // redirect to the callbackAddress\n      window.location.href = this.props.callback;\n    }\n  }\n\n  render() {\n   \n\n    \n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n    ];\n\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.sealSession}\n        card={<dib>DID authentication completed successfully</dib>}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        serverSessionId={this.props.serverSessionId}\n      />\n    );\n\n    if (isMobile() ) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }  \n\n\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={1} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    sealSession: state.sealSession,\n    callback: state.didAuthCallback,\n    serverSessionId: state.serverSessionId,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSteps: steps => {\n      dispatch(setStepperSteps(steps));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: uuid => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    setCallback: callback => {\n      dispatch(setDidCallback(callback));\n    },\n    setSealSession: session =>{\n        dispatch(setSealSession(session))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayDidAuth);\n"]},"metadata":{},"sourceType":"module"}