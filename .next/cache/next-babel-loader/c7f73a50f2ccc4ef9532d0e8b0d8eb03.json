{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { setSessionData, addToSelection, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Layout\";\n\nvar IssueEidas = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueEidas, _React$Component);\n\n  var _super = _createSuper(IssueEidas);\n\n  function IssueEidas(props) {\n    var _this;\n\n    _classCallCheck(this, IssueEidas);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    return _this;\n  }\n\n  _createClass(IssueEidas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.sessionData && this.props.sessionData.eidas) {\n        // console.log(`issue-eidas::`);\n        // console.log(this.props.sessionData.eidas);\n        var toSelect = [this.props.sessionData.eidas]; // console.log(`issue-eidas::`);\n\n        this.props.setEidasToSelection(toSelect);\n        this.props.setSteps([{\n          title: 'Authenticate over \"eIDAS-eID\"'\n        }, {\n          title: \"Request Issuance\"\n        }, {\n          title: \"Accept Verifiable Credential\"\n        }]);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hasRequiredAttributes = this.props.sessionData !== null && this.props.sessionData !== undefined && this.props.sessionData.eidas !== undefined;\n      console.log(\"issue-eidas.js:: hasRequiredAttributes \".concat(hasRequiredAttributes, \" \"));\n      var path = \"\".concat(this.props.baseUrl, \"test/eidas-authenticate\");\n      var eIDASLoginButton = !hasRequiredAttributes ? __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        href: path,\n        role: \"button\"\n      }, \"eIDAS\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"eIDAS\"); // let vcIssuanceLink = this.props.baseUrl?`${this.props.baseUrl}issue/SEAL-EIDAS`:'/issue/SEAL-EIDAS'\n      // let vcIssuanceHref = this.props.baseUrl?`issue/[vcType]]`:'/issue/[vcType]'\n\n      var vcIssuanceLink = \"/issue/SEAL-EIDAS\";\n      var vcIssuanceHref = \"/issue/[vcType]\";\n\n      var eidasCard = __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue an eIDAS based Verifiable Credential\"), __jsx(Card.Body, null, __jsx(Card.Title, null, hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to the required data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through the required data sources, click the \\\"Issue\\\" button to generate and receive your VC .\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, __jsx(Link, {\n        as: vcIssuanceLink,\n        href: vcIssuanceHref\n      }, __jsx(Button, {\n        variant: \"primary\",\n        disabled: !hasRequiredAttributes\n      }, \"Issue Verifiable Claim\")))))));\n\n      var stepNumber = hasRequiredAttributes ? 1 : 0;\n      var stepperSteps = [{\n        title: 'Authenticate over \"eIDAS-eID\"'\n      }, {\n        title: \"Request Issuance\"\n      }, {\n        title: \"Accept Verifiable Credential\"\n      }];\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber // completeColor={\"#00c642\"}\n\n      }))), eidasCard);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                }\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueEidas;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEidasToSelection: function setEidasToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEidas);","map":{"version":3,"names":["React","setSessionData","addToSelection","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","Layout","connect","Link","Button","Row","Col","Card","Container","MyStepper","IssueEidas","props","dispatch","isFetching","sessionData","eidas","toSelect","setEidasToSelection","setSteps","title","hasRequiredAttributes","undefined","console","log","path","baseUrl","eIDASLoginButton","vcIssuanceLink","vcIssuanceHref","eidasCard","marginTop","stepNumber","stepperSteps","reduxStore","req","userSessionData","session","userData","enpoint","getState","qrData","Component","mapStateToProps","state","fetching","userSelection","mapDispatchToProps","set","steps","setEndPoint","endpont","endpoint"],"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/issue/eidas.js"],"sourcesContent":["import React from \"react\";\nimport {\n  setSessionData,\n  addToSelection,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Layout\";\n\nclass IssueEidas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      qrData: reduxStore.getState().qrData\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.eidas) {\n      // console.log(`issue-eidas::`);\n      // console.log(this.props.sessionData.eidas);\n      let toSelect = [this.props.sessionData.eidas];\n      // console.log(`issue-eidas::`);\n      this.props.setEidasToSelection(toSelect);\n      this.props.setSteps([\n        { title: 'Authenticate over \"eIDAS-eID\"' },\n        { title: \"Request Issuance\" },\n        { title: \"Accept Verifiable Credential\" }\n      ]);\n    }\n  }\n\n  render() {\n    const hasRequiredAttributes =\n      this.props.sessionData !== null &&\n      this.props.sessionData !== undefined &&\n      this.props.sessionData.eidas !== undefined;\n\n    console.log(\n      `issue-eidas.js:: hasRequiredAttributes ${hasRequiredAttributes} `\n    );\n\n    let path = `${this.props.baseUrl}test/eidas-authenticate`;\n\n    let eIDASLoginButton = !hasRequiredAttributes ? (\n      <a className=\"btn btn-primary\" href={path} role=\"button\">\n        eIDAS\n      </a>\n    ) : (\n      <Button variant=\"primary\" disabled>\n        eIDAS\n      </Button>\n    );\n\n    // let vcIssuanceLink = this.props.baseUrl?`${this.props.baseUrl}issue/SEAL-EIDAS`:'/issue/SEAL-EIDAS'\n    // let vcIssuanceHref = this.props.baseUrl?`issue/[vcType]]`:'/issue/[vcType]'\n\n    let vcIssuanceLink = \"/issue/SEAL-EIDAS\";\n    let vcIssuanceHref = \"/issue/[vcType]\";\n    let eidasCard = (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>Issue an eIDAS based Verifiable Credential</Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to the required data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Once you have authenticated through the required data sources, click\n            the \"Issue\" button to generate and receive your VC .\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{eIDASLoginButton}</Col>\n              <Col>\n                <Link as={vcIssuanceLink} href={vcIssuanceHref}>\n                  <Button variant=\"primary\" disabled={!hasRequiredAttributes}>\n                    Issue Verifiable Claim\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n    let stepNumber = hasRequiredAttributes ? 1 : 0;\n    let stepperSteps = [\n      { title: 'Authenticate over \"eIDAS-eID\"' },\n      { title: \"Request Issuance\" },\n      { title: \"Accept Verifiable Credential\" }\n    ];\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper\n              steps={stepperSteps}\n              activeNum={stepNumber}\n              // completeColor={\"#00c642\"}\n            />\n          </Col>\n        </Row>\n        {eidasCard}\n\n        {/* <Row>\n          <div className=\"col\" style={{marginTop:\"1.5rem\"}}>\n            <Link href={this.props.baseUrl?`${this.props.baseUrl}`:\"/\"}>\n              <Button variant=\"primary\" className=\"float-right\">\n                Home\n              </Button>\n            </Link>\n          </div>\n        </Row> */}\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setEidasToSelection: set => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: steps => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: endpont => {\n      dispatch(setEndpoint(endpoint));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEidas);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}