{"ast":null,"code":"import _regeneratorRuntime from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setDidCallback, makeOnlyConnectionRequest, setEndpoint, setBaseUrl, setSealSession as _setSealSession, setServerSessionId } from \"../../store\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../components/Stepper\";\nimport HomeButton from \"../../components/HomeButton\";\nimport IssueVCButton from \"../../components/IssueVCButton\";\nimport PairOrCard from \"../../components/PairOrCard\";\n\nvar DisplayDidAuth = /*#__PURE__*/function (_React$Component) {\n  _inherits(DisplayDidAuth, _React$Component);\n\n  var _super = _createSuper(DisplayDidAuth);\n\n  function DisplayDidAuth(props) {\n    var _this;\n\n    _classCallCheck(this, DisplayDidAuth);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    return _this;\n  }\n\n  _createClass(DisplayDidAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // generated the connectionRequest\n      this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.DID) {\n        //if DID auth is completed\n        // redirect to the callbackAddress\n        window.location.href = this.props.callback;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepperSteps = [{\n        title: \"Pair your wallet\"\n      }];\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.sealSession,\n        card: __jsx(\"dib\", null, \"DID authentication completed successfully\"),\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession,\n        serverSessionId: this.props.serverSessionId\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: 1\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, sealSession, callback, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  reduxStore.dispatch(setServerSessionId(req.session.id));\n                  sealSession = req.session.sealSession;\n                  callback = req.session.callback;\n                } else {\n                  sealSession = reduxStore.getState().sealSession;\n                  callback = reduxStore.getState().callback;\n                }\n\n                reduxStore.dispatch(_setSealSession(sealSession));\n                reduxStore.dispatch(setDidCallback(callback));\n                return _context.abrupt(\"return\", {\n                  qrData: reduxStore.getState().qrData,\n                  sealSession: reduxStore.getState().sealSession,\n                  callback: reduxStore.getState().callback\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return DisplayDidAuth;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    sealSession: state.sealSession,\n    callback: state.didAuthCallback,\n    serverSessionId: state.serverSessionId\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    setCallback: function setCallback(callback) {\n      dispatch(setDidCallback(callback));\n    },\n    setSealSession: function setSealSession(session) {\n      dispatch(_setSealSession(session));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayDidAuth);","map":null,"metadata":{},"sourceType":"module"}