{"ast":null,"code":"var _jsxFileName = \"/home/ni/code/js/jolocom-seal-issuer/components/PairOrCard.js\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport QrPrompt from \"./QrPrompt\";\nimport SSE from \"./Sse.js\";\n\nvar PairOrCard = function PairOrCard(props) {\n  var vcSentToUser = __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col\",\n    style: {\n      marginTop: \"3rem\",\n      marginBottom: \"3rem\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    alt: \"\",\n    src: \"/finished.png\",\n    style: {\n      maxWidth: \"15rem\",\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"The verifiable credential has been sent to your mobile phone succesfully!\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), \"You should receive a notification, prompting you to store it, very soon. Please check your wallet notifications\")));\n\n  if (props.vcSent) {\n    return vcSentToUser;\n  }\n\n  var sseEndpoint = props.baseUrl ? \"\".concat(props.endpoint, \"/\").concat(props.baseUrl) : props.endpoint;\n\n  if (props.qrData && !props.DID) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, __jsx(QrPrompt, {\n      qrData: props.qrData,\n      message: \"SEAL is requesting to connect your uPort wallet:\",\n      permissions: [\"Push Notifications\"],\n      baseUrl: props.baseUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), __jsx(SSE, {\n      uuid: props.uuid,\n      endpoint: sseEndpoint,\n      serverSessionId: props.serverSessionId,\n      sealSession: props.sealSession,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    if (props.credQROffer) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, __jsx(QrPrompt, {\n        qrData: props.credQROffer,\n        message: \"Your Verifiable Credential is Ready!\",\n        permissions: [\"Push Credential\"],\n        baseUrl: props.baseUrl,\n        prompt: \"Scan the QR code with your Jolocom Smart Wallet to receive your Credential!\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }), __jsx(SSE, {\n        uuid: props.uuid,\n        endpoint: sseEndpoint,\n        serverSessionId: props.serverSessionId,\n        sealSession: props.sealSession,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      if (props.DID) {\n        return props.card;\n      } else {\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }\n        }, \"Generating Wallet Pairing Request...\");\n      }\n    }\n  }\n};\n\n_c = PairOrCard;\nexport default PairOrCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PairOrCard\");","map":{"version":3,"sources":["/home/ni/code/js/jolocom-seal-issuer/components/PairOrCard.js"],"names":["QrPrompt","SSE","PairOrCard","props","vcSentToUser","marginTop","marginBottom","textAlign","maxWidth","display","marginLeft","marginRight","vcSent","sseEndpoint","baseUrl","endpoint","qrData","DID","uuid","serverSessionId","sealSession","credQROffer","card"],"mappings":"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","sourcesContent":["import QrPrompt from \"./QrPrompt\";\nimport SSE from \"./Sse.js\";\n\nconst PairOrCard = props => {\n  let vcSentToUser = (\n    <div className={\"row\"}>\n      <div\n        className={\"col\"}\n        style={{\n          marginTop: \"3rem\",\n          marginBottom: \"3rem\",\n          textAlign: \"center\"\n        }}\n      >\n        <img\n          alt=\"\"\n          src=\"/finished.png\"\n          style={{\n            maxWidth: \"15rem\",\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n        />\n        <p>\n          The verifiable credential has been sent to your mobile phone\n          succesfully!\n          <br />\n          You should receive a notification, prompting you to store it, very\n          soon. Please check your wallet notifications\n        </p>\n      </div>\n    </div>\n  );\n\n  if (props.vcSent) {\n    return vcSentToUser;\n  }\n  let sseEndpoint = props.baseUrl\n      ? `${props.endpoint}/${props.baseUrl}`\n      : props.endpoint;\n\n  if (props.qrData && !props.DID) {\n    \n    return (\n      <div>\n        <QrPrompt\n          qrData={props.qrData}\n          message={\"SEAL is requesting to connect your uPort wallet:\"}\n          permissions={[\"Push Notifications\"]}\n          baseUrl={props.baseUrl}\n        />\n        <SSE\n          uuid={props.uuid}\n          endpoint={sseEndpoint}\n          serverSessionId={props.serverSessionId}\n          sealSession = {props.sealSession}\n        />\n      </div>\n    );\n  } else {\n    if(props.credQROffer){\n      return (\n        <div>\n          <QrPrompt\n            qrData={props.credQROffer}\n            message={\"Your Verifiable Credential is Ready!\"}\n            permissions={[\"Push Credential\"]}\n            baseUrl={props.baseUrl}\n            prompt={\"Scan the QR code with your Jolocom Smart Wallet to receive your Credential!\"}\n          />\n          <SSE\n            uuid={props.uuid}\n            endpoint={sseEndpoint}\n            serverSessionId={props.serverSessionId}\n            sealSession = {props.sealSession}\n          />\n        </div>\n      );\n    }else{\n      if (props.DID) {\n        return props.card;\n      } else {\n        return <div>Generating Wallet Pairing Request...</div>;\n      }\n    }\n    \n  }\n};\n\nexport default PairOrCard;\n"]},"metadata":{},"sourceType":"module"}