{"ast":null,"code":"import _regeneratorRuntime from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ni/code/js/seal-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { setSessionData, addToSelection, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl } from \"../store\";\nimport Layout from \"../components/Layout\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../components/Stepper\";\nimport { getPath } from \"../helpers/pathHelper\";\n\nvar IssueEidas = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueEidas, _React$Component);\n\n  var _super = _createSuper(IssueEidas);\n\n  function IssueEidas(props) {\n    var _this;\n\n    _classCallCheck(this, IssueEidas);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    return _this;\n  }\n\n  _createClass(IssueEidas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.sessionData && this.props.sessionData.eidas) {\n        // console.log(`issue-eidas::`);\n        // console.log(this.props.sessionData.eidas);\n        var toSelect = [this.props.sessionData.eidas]; // console.log(`issue-eidas::`);\n\n        this.props.setEidasToSelection(toSelect);\n        this.props.setSteps([{\n          title: 'Authenticate over \"eIDAS-eID\"'\n        }, {\n          title: \"Request Issuance\"\n        }, {\n          title: \"Accept Verifiable Credential\"\n        }]);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hasRequiredAttributes = this.props.sessionData !== null && this.props.sessionData !== undefined && this.props.sessionData.eidas !== undefined;\n      console.log(\"issue-eidas.js:: hasRequiredAttributes \".concat(hasRequiredAttributes, \" \"));\n      var path = \"\".concat(this.props.baseUrl, \"test/eidas-authenticate\");\n      var eIDASLoginButton = !hasRequiredAttributes ? __jsx(\"a\", {\n        className: \"btn btn-primary\",\n        href: path,\n        role: \"button\"\n      }, \"eIDAS\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"eIDAS\"); // let vcIssuanceLink = this.props.baseUrl?`${this.props.baseUrl}issue/SEAL-EIDAS`:'/issue/SEAL-EIDAS'\n      // let vcIssuanceHref = this.props.baseUrl?`issue/[vcType]]`:'/issue/[vcType]'\n\n      var vcIssuanceLink = \"/issue/SEAL-EIDAS\";\n      var vcIssuanceHref = \"/issue/[vcType]\";\n\n      var eidasCard = __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue an eIDAS based Verifiable Credential\"), __jsx(Card.Body, null, __jsx(Card.Title, null, hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to the required data sources\"), __jsx(Card.Text, null, \"Once you have authenticated through the required data sources, click the \\\"Issue\\\" button to generate and receive your VC .\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, eIDASLoginButton), __jsx(Col, null, __jsx(Link, {\n        as: vcIssuanceLink,\n        href: vcIssuanceHref\n      }, __jsx(Button, {\n        variant: \"primary\",\n        disabled: !hasRequiredAttributes\n      }, \"Issue Verifiable Claim\")))))));\n\n      var stepNumber = hasRequiredAttributes ? 1 : 0;\n      var stepperSteps = [{\n        title: 'Authenticate over \"eIDAS-eID\"'\n      }, {\n        title: \"Request Issuance\"\n      }, {\n        title: \"Accept Verifiable Credential\"\n      }];\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber // completeColor={\"#00c642\"}\n\n      }))), eidasCard, __jsx(Row, null, __jsx(\"div\", {\n        className: \"col\",\n        style: {\n          marginTop: \"1.5rem\"\n        }\n      }, __jsx(Link, {\n        href: this.props.baseUrl ? \"\".concat(this.props.baseUrl) : \"/\"\n      }, __jsx(Button, {\n        variant: \"primary\",\n        className: \"float-right\"\n      }, \"Home\")))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                }\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueEidas;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    sessionData: state.sessionData,\n    userSelection: state.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.baseUrl\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEidasToSelection: function setEidasToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEidas);","map":null,"metadata":{},"sourceType":"module"}