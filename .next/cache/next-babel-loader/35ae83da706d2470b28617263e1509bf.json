{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setDidCallback, makeOnlyConnectionRequest, setEndpoint, setBaseUrl, setSealSession as _setSealSession, setServerSessionId } from \"../../store\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../components/Stepper\";\nimport HomeButton from \"../../components/HomeButton\";\nimport IssueVCButton from \"../../components/IssueVCButton\";\nimport PairOrCard from \"../../components/PairOrCard\";\nimport ConnectMobile from \"../../components/ConnectMobile\";\nimport isMobile from \"../../helpers/isMobile\";\n\nvar DisplayDidAuth = /*#__PURE__*/function (_React$Component) {\n  _inherits(DisplayDidAuth, _React$Component);\n\n  var _super = _createSuper(DisplayDidAuth);\n\n  function DisplayDidAuth(props) {\n    var _this;\n\n    _classCallCheck(this, DisplayDidAuth);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    return _this;\n  }\n\n  _createClass(DisplayDidAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // generated the connectionRequest\n      this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, \"didAuth\", isMobile());\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.DID) {\n        //if DID auth is completed\n        // redirect to the callbackAddress\n        window.location.href = this.props.callback;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepperSteps = [{\n        title: \"Pair your wallet\"\n      }];\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.sealSession,\n        card: __jsx(\"dib\", null, \"DID authentication completed successfully\"),\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession,\n        serverSessionId: this.props.serverSessionId,\n        credQROffer: this.props.credQROffer\n      });\n\n      if (isMobile()) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepperSteps.length\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.serverSessionId,\n          sealSession: this.props.sealSession\n        }));\n      }\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: 1\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, sealSession, callback, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  reduxStore.dispatch(setServerSessionId(req.session.id));\n                  sealSession = req.session.sealSession;\n                  callback = req.session.callback;\n                } else {\n                  sealSession = reduxStore.getState().sealSession;\n                  callback = reduxStore.getState().callback;\n                }\n\n                reduxStore.dispatch(_setSealSession(sealSession));\n                reduxStore.dispatch(setDidCallback(callback));\n                return _context.abrupt(\"return\", {\n                  qrData: reduxStore.getState().qrData,\n                  sealSession: reduxStore.getState().sealSession,\n                  callback: reduxStore.getState().callback\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return DisplayDidAuth;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    sealSession: state.sealSession,\n    callback: state.didAuthCallback,\n    serverSessionId: state.serverSessionId,\n    credQROffer: state.credQROffer\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, vcType, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    setCallback: function setCallback(callback) {\n      dispatch(setDidCallback(callback));\n    },\n    setSealSession: function setSealSession(session) {\n      dispatch(_setSealSession(session));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayDidAuth);","map":{"version":3,"sources":["/home/ni/code/js/jolocom-seal-issuer/pages/vc/didAuth.js"],"names":["React","axios","setDidCallback","makeOnlyConnectionRequest","setEndpoint","setBaseUrl","setSealSession","setServerSessionId","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","ConnectMobile","isMobile","DisplayDidAuth","props","dispatch","isFetching","sessionData","makeConnectionRequest","sealSession","baseUrl","DID","window","location","href","callback","stepperSteps","title","result","qrData","vcSent","serverSessionId","credQROffer","length","uuid","reduxStore","req","session","enpoint","id","getState","Component","mapStateToProps","state","fetching","didAuthCallback","mapDispatchToProps","setSteps","steps","setStepperSteps","vcType","didAuthOK","completeDIDAuth","setCallback"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setDidCallback,\n  makeOnlyConnectionRequest,\n  setEndpoint,\n  setBaseUrl,\n  setSealSession,\n  setServerSessionId,\n} from \"../../store\";\nimport Layout from \"../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../components/Stepper\";\nimport HomeButton from \"../../components/HomeButton\";\nimport IssueVCButton from \"../../components/IssueVCButton\";\nimport PairOrCard from \"../../components/PairOrCard\";\nimport ConnectMobile from \"../../components/ConnectMobile\";\nimport isMobile from \"../../helpers/isMobile\";\n\nclass DisplayDidAuth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let sealSession;\n    let callback;\n    if (typeof window === \"undefined\") {\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      reduxStore.dispatch(setServerSessionId(req.session.id));\n      sealSession = req.session.sealSession;\n      callback = req.session.callback;\n    } else {\n      sealSession = reduxStore.getState().sealSession;\n      callback = reduxStore.getState().callback;\n    }\n    reduxStore.dispatch(setSealSession(sealSession));\n    reduxStore.dispatch(setDidCallback(callback));\n\n\n    return {\n      qrData: reduxStore.getState().qrData,\n      sealSession: reduxStore.getState().sealSession,\n      callback: reduxStore.getState().callback\n    };\n  }\n\n  componentDidMount() {\n    // generated the connectionRequest\n    this.props.makeConnectionRequest(\n      this.props.sealSession,\n      this.props.baseUrl,\n      \"didAuth\",\n      isMobile()\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.DID) {\n      //if DID auth is completed\n      // redirect to the callbackAddress\n      window.location.href = this.props.callback;\n    }\n  }\n\n  render() {\n   \n\n    \n    let stepperSteps = [\n      { title: \"Pair your wallet\" },\n    ];\n\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.sealSession}\n        card={<dib>DID authentication completed successfully</dib>}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        serverSessionId={this.props.serverSessionId}\n        credQROffer={this.props.credQROffer}\n      />\n    );\n\n    if (isMobile() ) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepperSteps.length} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.serverSessionId}\n            sealSession={this.props.sealSession}\n          />\n        </Layout>\n      );\n    }  \n\n\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={1} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.fetching,\n    qrData: state.qrData,\n    baseUrl: state.baseUrl,\n    DID: state.DID,\n    sealSession: state.sealSession,\n    callback: state.didAuthCallback,\n    serverSessionId: state.serverSessionId,\n    credQROffer: state.credQROffer,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSteps: steps => {\n      dispatch(setStepperSteps(steps));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, vcType, isMobile) => {\n      dispatch(\n        makeOnlyConnectionRequest(sealSession, baseUrl, vcType, isMobile)\n      );\n    },\n    didAuthOK: uuid => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    setCallback: callback => {\n      dispatch(setDidCallback(callback));\n    },\n    setSealSession: session =>{\n        dispatch(setSealSession(session))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayDidAuth);\n"]},"metadata":{},"sourceType":"module"}