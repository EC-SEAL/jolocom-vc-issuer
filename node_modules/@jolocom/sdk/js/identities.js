"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityKeeper = void 0;
class IdentityKeeper {
    constructor(sdk) {
        this.sdk = sdk;
    }
    /**
     * Retrieves a Signed Credential by id, or throws
     *
     * @param credParams - credential attributes
     * @returns SignedCredential instance
     * @category Credential Management
     */
    async get(did) {
        const creds = await this.find({ did });
        if (creds.length !== 1)
            throw new Error('multiple results for ' + did);
        return creds[0];
    }
    async find(attrs, options) {
        const ident = await this.sdk.storage.get.encryptedWallet(attrs && attrs.did);
        if (!ident)
            return [];
        return [];
    }
    async delete(attrs) {
        // we use this.find to apply the filter if any
        const creds = await this.find(attrs);
        if (creds.length === 0)
            return false;
        // TODO await creds.map(({ id }) => this.sdk.storage.delete.identity(did))
        return true;
    }
}
exports.IdentityKeeper = IdentityKeeper;
//# sourceMappingURL=identities.js.map